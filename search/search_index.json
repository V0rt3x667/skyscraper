{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#skyscraper-enhanced-and-reloaded","title":"Skyscraper Enhanced and Reloaded","text":"<p>Welcome to the powerful one-stop scraping-tool to maintain your gamelists!</p> <p>Skyscraper focuses on RetroPie integration but it can also be used without RetroPie. However, the RetroPie-Setup has a scriptmodule to install this Skyscraper fork.</p> <p>This fork is based on commit <code>654a31b</code> (2022-10-26) from this fork. See also changes made here since Lars' retired his project.</p> <p>Ready? Let's dive in!</p>"},{"location":"ARTWORK/","title":"Artwork & Layout","text":""},{"location":"ARTWORK/#artwork-look-and-effects","title":"Artwork Look and Effects","text":"<p>Skyscraper allows you to fully customize how you want the final frontend artwork to appear by editing the file <code>/home/&lt;USER&gt;/.skyscraper/artwork.xml</code>. Each piece of artwork can be composited from one or more of the other artwork resources and you can even apply several effects to them.</p> <ul> <li>Each <code>&lt;output&gt;</code> node exports a single piece of artwork.</li> <li>If no <code>&lt;layer&gt;</code> nodes are nested in an output node, it will simply export the defined type as raw unmanipulated artwork.</li> <li>All layer nodes and their nested effects are rendered / applied top-to-bottom.</li> </ul> <p>Read on for an example <code>artwork.xml</code> and a more thorough description of the <code>&lt;output&gt;</code>, <code>&lt;layer&gt;</code> and the various available effect nodes.</p> <p>Warning</p> <p>Some users seem to have a habbit of editing the <code>/home/&lt;USER&gt;/skysource/artwork.xml</code> file. This is not the correct file! Please read the first paragraph. :)</p> <p>Tip</p> <p>Every time you change the artwork configuration, remember to regenerate the game list. Your changes won't take effect until you do so. Read more about this here.</p> <p>Watch a video demonstrating the artwork compositing features here. Note that the video is quite old and only demonstrates a fraction of the possibilities you have with the Skyscraper compositor. It's all thoroughly documented below.</p>"},{"location":"ARTWORK/#example-artworkxml","title":"Example artwork.xml","text":"<p>An example could look something like this:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;artwork&gt;\n  &lt;output type=\"screenshot\" width=\"640\" height=\"480\"&gt;\n    &lt;layer resource=\"screenshot\" x=\"20\" width=\"520\" height=\"390\" align=\"center\" valign=\"middle\"&gt;\n      &lt;rounded radius=\"10\"/&gt;\n      &lt;stroke width=\"5\"/&gt;\n    &lt;/layer&gt;\n    &lt;layer resource=\"cover\" height=\"250\" x=\"0\" y=\"-10\" valign=\"bottom\"&gt;\n      &lt;gamebox side=\"wheel\" rotate=\"90\"/&gt;\n      &lt;shadow distance=\"5\" softness=\"5\" opacity=\"70\"/&gt;\n    &lt;/layer&gt;\n    &lt;layer resource=\"wheel\" width=\"250\" x=\"-10\" align=\"right\"&gt;\n      &lt;shadow distance=\"5\" softness=\"5\" opacity=\"70\"/&gt;\n    &lt;/layer&gt;\n  &lt;/output&gt;\n&lt;/artwork&gt;\n</code></pre> <p>Which results in a screenshot being exported to look like this:</p> <p> </p> Artwork example"},{"location":"ARTWORK/#xml-definitions","title":"XML Definitions","text":"<p>Click the following links to quickly go to a desired section:</p> <p>Nodes: XML Preamble, Artwork node, Output node, Layer node</p> <p>Effects: Blur effect, Brightness effect, Color balance effect, Colorize effect, Contrast effect, Frame effect, Gamebox effect, Hue effect, Mask effect, Opacity effect, Rotate effect, Rounded effect, Saturation effect, Scanlines effect, Shadow effect, Stroke effect.</p> <p>Other: Custom image resources.</p>"},{"location":"ARTWORK/#xml-preamble-mandatory","title":"XML Preamble (Mandatory)","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n</code></pre> <p>This is a special node used to describe the XML language used in the document. Don't change it.</p>"},{"location":"ARTWORK/#artwork-node-mandatory","title":"'artwork' node (Mandatory)","text":"<pre><code>&lt;artwork&gt;\n...\n&lt;/artwork&gt;\n</code></pre> <p>This node is the document base node. It contains all other nodes. Don't change or delete it.</p>"},{"location":"ARTWORK/#output-nodes-optional","title":"'output' node(s) (Optional)","text":"<pre><code>&lt;output type=\"screenshot\" resource=\"wheel\" mpixels=\"0.1\" width=\"640\" height=\"400\"&gt;\n...\n&lt;output&gt;\n</code></pre> <p>The output node describes a single piece of artwork to be exported when scraping. You can have as many (or few) output nodes as you like.</p> <p>An output node with no nested 'layer' nodes will export the type with no compositing.</p>"},{"location":"ARTWORK/#type-attribute-mandatory","title":"'type' attribute (Mandatory)","text":"<p>The type to be exported. Can be:</p> <ul> <li>screenshot</li> <li>cover</li> <li>wheel</li> <li>marquee</li> <li>texture</li> </ul>"},{"location":"ARTWORK/#resource-attribute-from-v276-optional","title":"'resource' attribute [from v2.7.6] (Optional)","text":"<p>The resource attribute can be set to one of the following:</p> <ul> <li>screenshot</li> <li>cover</li> <li>wheel</li> <li>marquee</li> <li>texture</li> </ul> <p>For instance, if you wish to export a 'marquee' image but want it to make use of the 'wheel' resource instead, you can set <code>&lt;output type=\"marquee\" resource=\"wheel\"/&gt;</code>. It will then export a 'marquee' but use the raw unmanipulated 'wheel' image when doing so. So if your frontend theme, such as some EmulationStation themes, makes use of the 'marquee' artwork, it will then be using the 'wheel' for it. If this attribute is left out, 'resource' will be set to the same as 'type'.</p> <p>Info</p> <p>The <code>screenshot</code>, <code>cover</code>, <code>wheel</code> and <code>marquee</code> types are hardcoded. It's not currently possible to create custom types.</p>"},{"location":"ARTWORK/#mpixels-attribute-from-v278-optional","title":"'mpixels' attribute [from v2.7.8] (Optional)","text":"<p>Set the desired area size for the image resource in mpixels (eg '0.1'). This can be used as an alternative to setting width or height and is useful in cases where images vary a lot in size. 'width' and 'height' attributes will be ignored if this is set.</p>"},{"location":"ARTWORK/#width-and-height-attributes-optional","title":"'width' and 'height' attributes (Optional)","text":"<p>Sets the width and height of the artwork export. If both are left out it will use the original size of the scraped artwork. If one is left out, it will keep the aspect ratio relative to that.</p>"},{"location":"ARTWORK/#layer-nodes-optional","title":"'layer' node(s) (Optional)","text":"<pre><code>&lt;layer resource=\"cover\" mode=\"overlay\" opacity=\"50\" x=\"5\" y=\"5\" mpixels=\"0.1\" width=\"10\" height=\"10\" align=\"center\" valign=\"middle\"/&gt;\n...\n&lt;/layer&gt;\n</code></pre> <p>Like layers in Gimp or almost any other respectable photo manipulation software, you can add as many of these nodes as you like. You can even nest them inside of each other, in which case the child layer will be anchored to the topleft corner of the parent layer, making it easier to align.</p> <p>Note</p> <p>Layer and effect nodes are rendered from top to bottom.</p>"},{"location":"ARTWORK/#resource-attribute-optional","title":"'resource' attribute (Optional)","text":"<p>The artwork resource to be used by the layer. It can be:</p> <ul> <li>screenshot</li> <li>cover</li> <li>wheel</li> <li>marquee</li> </ul> <p>If the resource attribute is left out the layer will simply be transparent. This is useful when aligning nested layers that differ in size across games.</p>"},{"location":"ARTWORK/#mode-attribute-from-v233-optional","title":"'mode' attribute [from v2.3.3] (Optional)","text":"<p>Sets the layer render mode. It can be:</p> <ul> <li>multiply</li> <li>screen</li> <li>overlay</li> <li>darken</li> <li>lighten</li> <li>colordodge</li> <li>colorburn</li> <li>hardlight</li> <li>softlight</li> <li>difference</li> <li>exclusion</li> <li>sourcein</li> <li>destinationin</li> <li>sourceout</li> <li>destinationout</li> <li>sourceatop</li> <li>destinationatop</li> <li>xor</li> </ul> <p>If left out the layer is simply rendered as is on top of the parent layer.</p> <p> </p> Mode examples (note the in-image captions)"},{"location":"ARTWORK/#opacity-attribute-from-v233-optional","title":"'opacity' attribute [from v2.3.3] (Optional)","text":"<p>Defines the opacity of the layer. 100 is completely visible. 0 is completely transparent.</p>"},{"location":"ARTWORK/#x-and-y-attributes-optional","title":"'x' and 'y' attributes (Optional)","text":"<p>X and Y coordinates for placement. Relative to 'align' and 'valign' and the parent layer. Either can be left out in which case it will be set to 0.</p>"},{"location":"ARTWORK/#mpixels-attribute-from-v278-optional_1","title":"'mpixels' attribute [from v2.7.8] (Optional)","text":"<p>Set the desired area size for the image resource in mpixels (eg '0.1'). This can be used as an alternative to setting width or height and is useful in cases where images vary a lot in size. 'width' and 'height' attributes will be ignored if this is set.</p>"},{"location":"ARTWORK/#width-and-height-attributes-optional_1","title":"'width' and 'height' attributes (Optional)","text":"<p>Sets the width and height of the layer. If either is left out it will keep the aspect ratio relative to the other. If both are left out it will use the original dimensions of the scraped resource.</p>"},{"location":"ARTWORK/#align-attribute-optional","title":"'align' attribute (Optional)","text":"<p>The horizontal alignment of the layer. It can be:</p> <ul> <li>left</li> <li>center</li> <li>right</li> </ul> <p>The alignment is relative to the parent layer.</p>"},{"location":"ARTWORK/#valign-attribute-optional","title":"'valign' attribute (Optional)","text":"<p>The vertical alignment of the layer. It can be:</p> <ul> <li>top</li> <li>middle</li> <li>bottom</li> </ul> <p>The alignment is relative to the parent layer.</p>"},{"location":"ARTWORK/#balance-effect-node-optional","title":"'balance' effect node (Optional)","text":"Balance effect sample <pre><code>&lt;layer&gt;\n  &lt;balance red=\"10\" green=\"20\" blue=\"30\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Adjusts the color balance of the parent layer.</p>"},{"location":"ARTWORK/#red-attribute-optional","title":"'red' attribute (Optional)","text":"<p>The red color adjustment. Can be -255 to 255.</p>"},{"location":"ARTWORK/#green-attribute-optional","title":"'green' attribute (Optional)","text":"<p>The green color adjustment. Can be -255 to 255.</p>"},{"location":"ARTWORK/#blue-attribute-optional","title":"'blue' attribute (Optional)","text":"<p>The blue color adjustment. Can be -255 to 255.</p>"},{"location":"ARTWORK/#blur-effect-node-optional","title":"'blur' effect node (Optional)","text":"Blur effect sample <pre><code>&lt;layer&gt;\n  &lt;blur softness=\"5\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Blurs the parent layer.</p>"},{"location":"ARTWORK/#softness-attribute-mandatory","title":"'softness' attribute (Mandatory)","text":"<p>Defines the radius of the blur. Higher means blurrier.</p>"},{"location":"ARTWORK/#brightness-effect-node-optional","title":"'brightness' effect node (Optional)","text":"Brightness effect sample <pre><code>&lt;layer&gt;\n  &lt;brightness value=\"10\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Adjusts the brightness of the parent layer.</p>"},{"location":"ARTWORK/#value-attribute-mandatory","title":"'value' attribute (Mandatory)","text":"<p>The difference value for the adjustment. Can be -255 to 255.</p>"},{"location":"ARTWORK/#colorize-effect-node-from-v233-optional","title":"'colorize' effect node [from v2.3.3] (Optional)","text":"Colorize effect sample <pre><code>&lt;layer&gt;\n  &lt;colorize hue=\"180\" saturation=\"-50\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Colorizes the parent layer with a single hue.</p>"},{"location":"ARTWORK/#hue-attribute-mandatory","title":"'hue' attribute (Mandatory)","text":"<p>Sets the hue in degrees. Can be 0 to 360.</p>"},{"location":"ARTWORK/#saturation-attribute-optional","title":"'saturation' attribute (Optional)","text":"<p>Sets the saturation delta value of the colorize effect. Can be -127 to 127.</p>"},{"location":"ARTWORK/#contrast-effect-node-optional","title":"'contrast' effect node (Optional)","text":"Contrast effect sample <pre><code>&lt;layer&gt;\n  &lt;contrast value=\"10\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Adjusts the contrast of the parent layer.</p>"},{"location":"ARTWORK/#value-attribute-mandatory_1","title":"'value' attribute (Mandatory)","text":"<p>The difference value for the adjustment. Can be -255 to 255.</p>"},{"location":"ARTWORK/#frame-effect-node-optional","title":"'frame' effect node (Optional)","text":"Frame effect sample <pre><code>&lt;layer&gt;\n  &lt;frame file=\"[custom image resource]\" x=\"0\" y=\"0\" width=\"100\" height=\"100\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. This applies a frame to the parent layer.</p> <p>Tip</p> <p>You can get some cool results by first applying a mask, then applying a frame. This is useful for frames that aren't square.</p>"},{"location":"ARTWORK/#file-attribute-mandatory","title":"'file' attribute (Mandatory)","text":"<p>The filename of the custom image resource to be used as frame.</p>"},{"location":"ARTWORK/#width-attribute-optional","title":"'width' attribute (Optional)","text":"<p>Sets the width of the frame in pixels. If left out it will be set to the width of the parent layer.</p>"},{"location":"ARTWORK/#height-attribute-optional","title":"'height' attribute (Optional)","text":"<p>Sets the height of the frame in pixels. If left out it will be set to the height of the parent layer.</p>"},{"location":"ARTWORK/#x-attribute-optional","title":"'x' attribute (Optional)","text":"<p>Sets the x coordinate of the frame relative to the parent layer. If left out it will be set to 0.</p>"},{"location":"ARTWORK/#y-attribute-optional","title":"'y' attribute (Optional)","text":"<p>Sets the y coordinate of the frame relative to the parent layer. If left out it will be set to 0.</p>"},{"location":"ARTWORK/#gamebox-effect-node-optional","title":"'gamebox' effect node (Optional)","text":"Gamebox effect sample <p>Left image shows the result with the wheel artwork applied to the side. Right image shows the original cover layer.</p> <pre><code>&lt;layer resource=\"cover\" height=\"200\"&gt;\n  &lt;gamebox side=\"[custom image resource]\" rotate=\"90\" sidescaling=\"both\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Renders a nifty looking 3D game box. It uses the parent layer image on the front of the box.</p>"},{"location":"ARTWORK/#side-attribute-optional","title":"'side' attribute (Optional)","text":"<p>The filename of the custom image resource to be used on the side of the box.</p>"},{"location":"ARTWORK/#rotate-attribute-optional","title":"'rotate' attribute (Optional)","text":"<p>Defines the rotation of the side image in degrees.</p>"},{"location":"ARTWORK/#sidescaling-attribute-from-v271-optional","title":"'sidescaling' attribute [from v2.7.1] (Optional)","text":"<p>Defines how to scale the side / spine image. If left out, it will autoscale depending on the size of the artwork resource. Can be 'width', 'height' or 'both'.</p>"},{"location":"ARTWORK/#hue-effect-node-from-v233-optional","title":"'hue' effect node [from v2.3.3] (Optional)","text":"Hue effect sample <pre><code>&lt;layer&gt;\n  &lt;hue value=\"100\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Rotates the hue of the parent layer.</p>"},{"location":"ARTWORK/#value-attribute-mandatory_2","title":"'value' attribute (Mandatory)","text":"<p>The difference value for the adjustment. Can be 0 to 359.</p>"},{"location":"ARTWORK/#mask-effect-node-optional","title":"'mask' effect node (Optional)","text":"Masking sample <p>Left image shows the result. Right image shows the mask used. The white part of the mask is transparent.</p> <pre><code>&lt;layer&gt;\n  &lt;mask file=\"[custom image resource]\" x=\"0\" y=\"0\" width=\"100\" height=\"100\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. This applies a mask to the parent layer.</p>"},{"location":"ARTWORK/#file-attribute-mandatory_1","title":"'file' attribute (Mandatory)","text":"<p>The filename of the custom image resource to be used as mask. The alpha channel of the mask will blind out the underlying parts of the parent layer.</p>"},{"location":"ARTWORK/#width-attribute-optional_1","title":"'width' attribute (Optional)","text":"<p>Sets the width of the mask in pixels. If left out it will be set to the width of the parent layer.</p>"},{"location":"ARTWORK/#height-attribute-optional_1","title":"'height' attribute (Optional)","text":"<p>Sets the height of the mask in pixels. If left out it will be set to the height of the parent layer.</p>"},{"location":"ARTWORK/#x-attribute-optional_1","title":"'x' attribute (Optional)","text":"<p>Sets the x coordinate of the mask relative to the parent layer. If left out it will be set to 0.</p>"},{"location":"ARTWORK/#y-attribute-optional_1","title":"'y' attribute (Optional)","text":"<p>Sets the y coordinate of the mask relative to the parent layer. If left out it will be set to 0.</p>"},{"location":"ARTWORK/#opacity-effect-node-optional","title":"'opacity' effect node (Optional)","text":"Opacity effect sample <pre><code>&lt;layer&gt;\n  &lt;opacity value=\"50\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Adjusts the opacity of the parent layer.</p>"},{"location":"ARTWORK/#value-attribute-mandatory_3","title":"'value' attribute (Mandatory)","text":"<p>The opacity of the layer. Can be 0-100 where 0 is completely transparent and 100 is opaque.</p>"},{"location":"ARTWORK/#rotate-effect-node-from-v233-optional","title":"'rotate' effect node [from v2.3.3] (Optional)","text":"Rotation examples <pre><code>&lt;layer&gt;\n  &lt;rotate degrees=\"45\" axis=\"y\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Rotates the parent layer around the x, y or z axis.</p>"},{"location":"ARTWORK/#degrees-attribute-mandatory","title":"'degrees' attribute (Mandatory)","text":"<p>Sets how many degrees the parent layer will be rotated. Can be -360 to 360.</p>"},{"location":"ARTWORK/#axis-attribute-optional","title":"'axis' attribute (Optional)","text":"<p>Sets which axis the parent layer should be rotated around. Can be 'x', 'y' or 'z'. If left out it will be set to 'z'.</p>"},{"location":"ARTWORK/#rounded-effect-node-optional","title":"'rounded' effect node (Optional)","text":"Corner rounding sample <pre><code>&lt;layer&gt;\n  &lt;rounded radius=\"10\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Rounds the corners of the parent layer.</p>"},{"location":"ARTWORK/#radius-attribute-mandatory","title":"'radius' attribute (Mandatory)","text":"<p>Defines the radius of the corners in pixels.</p>"},{"location":"ARTWORK/#saturation-effect-node-from-v233-optional","title":"'saturation' effect node [from v2.3.3] (Optional)","text":"Saturation effect sample <pre><code>&lt;layer&gt;\n  &lt;saturation value=\"-100\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Adjusts the color saturation of the parent layer.</p> <p>Tip</p> <p>If you want to completely greyscale your layer I highly recommend using the 'saturation' attribute of the 'colorize' effect instead. It uses a better estimation of percieved luminance.</p>"},{"location":"ARTWORK/#value-attribute-mandatory_4","title":"'value' attribute (Mandatory)","text":"<p>The difference value for the adjustment. Can be -255 to 255.</p>"},{"location":"ARTWORK/#scanlines-effect-node-from-v290-optional","title":"'scanlines' effect node [from v2.9.0] (Optional)","text":"Scanlines effect sample <pre><code>&lt;layer&gt;\n  &lt;scanlines file=\"scanlines1.png\" scale=\"1.0\" opacity=\"100\" mode=\"overlay\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Adds a CRT monitor scanline effect to the parent layer.</p>"},{"location":"ARTWORK/#file-attribute-optional","title":"'file' attribute (Optional)","text":"<p>The filename of the custom image resource to be used as the scanline overlay. If left out it defaults to <code>scanlines1.png</code>.</p>"},{"location":"ARTWORK/#scale-attribute-optional","title":"'scale' attribute (Optional)","text":"<p>Sets the scale factor of the overlay. Can be 0.1 to 2.0. If left out it defaults to 1.0.</p>"},{"location":"ARTWORK/#opacity-attribute-optional","title":"'opacity' attribute (Optional)","text":"<p>Sets the opacity of the overlay. Can be 0 to 100. If left out it defaults to 100.</p>"},{"location":"ARTWORK/#mode-attribute-optional","title":"'mode' attribute (Optional)","text":"<p>Sets the overlay compositing mode. It can be:</p> <ul> <li>multiply</li> <li>screen</li> <li>overlay</li> <li>darken</li> <li>lighten</li> <li>colordodge</li> <li>colorburn</li> <li>hardlight</li> <li>softlight</li> <li>difference</li> <li>exclusion</li> <li>sourcein</li> <li>destinationin</li> <li>sourceout</li> <li>destinationout</li> <li>sourceatop</li> <li>destinationatop</li> <li>xor</li> </ul> <p>If left out the overlay is rendered using the <code>overlay</code> method.</p> <p> </p> Layering examples (note the in-image captions)"},{"location":"ARTWORK/#shadow-effect-node-optional","title":"'shadow' effect node (Optional)","text":"Dropshadow effect sample <pre><code>&lt;layer&gt;\n  &lt;shadow distance=\"10\" softness=\"5\" opacity=\"50\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Renders a dropshadow on the parent layer using the attributes provided. If either of the attributes are left out, the shadow won't be drawn.</p>"},{"location":"ARTWORK/#distance-attribute-mandatory","title":"'distance' attribute (Mandatory)","text":"<p>Distance in pixels from the layer. The distance is always down to the right.</p>"},{"location":"ARTWORK/#softness-attribute-mandatory_1","title":"'softness' attribute (Mandatory)","text":"<p>Defines how soft (radius) the shadow will appear. A value of 0 is sharpest.</p>"},{"location":"ARTWORK/#opacity-attribute-mandatory","title":"'opacity' attribute (Mandatory)","text":"<p>Defines the opacity of the shadow. 100 is completely visible. 0 is completely transparent.</p>"},{"location":"ARTWORK/#stroke-effect-node-optional","title":"'stroke' effect node (Optional)","text":"Stroke effect sample <pre><code>&lt;layer&gt;\n  &lt;stroke width=\"5\" red=\"10\" green=\"20\" blue=\"30\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Renders a colored outline on the parent layer. If all color attributes are left out, it averages a suitable color from the parent layer.</p>"},{"location":"ARTWORK/#width-attribute-mandatory","title":"'width' attribute (Mandatory)","text":"<p>The width of the outline in pixels.</p>"},{"location":"ARTWORK/#red-attribute-optional_1","title":"'red' attribute (Optional)","text":"<p>The red color value for the outline. Can be 0-255. If left out it is set to 0.</p>"},{"location":"ARTWORK/#green-attribute-optional_1","title":"'green' attribute (Optional)","text":"<p>The green color value for the outline. Can be 0-255. If left out it is set to 0.</p>"},{"location":"ARTWORK/#blue-attribute-optional_1","title":"'blue' attribute (Optional)","text":"<p>The blue color value for the outline. Can be 0-255. If left out it is set to 0.</p>"},{"location":"ARTWORK/#color-attribute-from-v231-optional","title":"'color' attribute [from v2.3.1] (Optional)","text":"<p>Provides the color to use hex-style. This can be used instead of the 'red', 'green' and 'blue' attributes described above. An example could be 'color=\"#ff0099\"'.</p>"},{"location":"ARTWORK/#custom-image-resources","title":"Custom image resources","text":"<p>From Skyscraper version 2.3.0 you can use custom image resources wherever the documentation says so. Place your custom resources in the '<code>/home/&lt;USER&gt;/.skyscraper/resources</code>' folder and use it by adding the filename to the attribute.</p> <p>Example:</p> <pre><code>&lt;gamebox side=\"megadrive_logo.png\" rotate=\"90\"/&gt;\n</code></pre> <p>The file megadrive_logo.png will then be loaded from the '<code>/home/&lt;USER&gt;/.skyscraper/resources/megadrive_logo.png</code>' file. Feel free to create subfolders inside the resources folder. If you do, remember to add the partial path to the filename like so:</p> <pre><code>&lt;gamebox side=\"platform_logos/megadrive_logo.png\" rotate=\"90\"/&gt;\n</code></pre> <p>This will look for the file at '<code>/home/&lt;USER&gt;/.skyscraper/resources/platform_logos/megadrive_logo.png</code>'.</p> <p>Warning</p> <p>All custom image resources are loaded into memory when Skyscraper starts to avoid repeatedly reading them from disc / SD card. So please keep your resources to a minimum - otherwise it might exceed the total memory on the Pi which will cause Skyscraper to get killed by the kernel.</p>"},{"location":"CACHE/","title":"Skyscraper Cache","text":""},{"location":"CACHE/#resource-cache","title":"Resource Cache","text":"<p>Whenever you scrape any platform with any scraping module, Skyscraper caches each resource internally. A resource can, for instance, be a game <code>description</code> or a game <code>screenshot</code>. Each game can have several versions of each resource cached locally. One of each type per scraping module. This comes in handy when generating the game list and artwork compositions.</p> <p>Think of the resource cache as the cache in an internet browser. Most of the data on webpages don't change much. By caching some of the data locally, it can load parts of a webpage from that data instead of loading it from the remote server. This is exactly how the Skyscraper cache works. It helps keep the online servers healthy by not hammering them whenever you need resources you already downloaded once. And it allows you to re-generate the frontend game lists if you add new games or perhaps want to change the style of the exported artwork.</p> <p>Default resource cache folder</p> <p>The default base folder for all of Skyscrapers' locally cached data is in the <code>/home/&lt;USER&gt;/.skyscraper/cache</code> folder. In this folder you'll find individual platform subfolders. Any of these are selfcontained and contains all of the cached data for that particular platform.</p> <p>Resource and scraping module priorities</p> <p>There is ONE file that you can and should edit inside each of the <code>/home/&lt;USER&gt;/.skyscraper/cache/&lt;PLATFORM&gt;</code> folders. That file is called <code>priorities.xml</code> and decides the scraper priority of resources for each resource type. For instance, if you know that <code>thegamesdb</code> always provides the best <code>descriptions</code> for games, you'd add an <code>&lt;order type=\"description\"&gt;</code> node with a <code>&lt;source&gt;thegamesdb&lt;/source&gt;</code> subnode. You can have multiple <code>&lt;source&gt;</code> nodes, Skyscraper will then prefer the topmost source when generating a game list. If the topmost isn't found it'll prioritize the next one and so forth. Any source that isn't listed with an <code>&lt;order&gt;</code> node will be prioritized using timestamps for when each resource was added to the cache. So you don't have to add all of them.</p> <p>Skyscraper provides the example file <code>/home/&lt;USER&gt;/.skyscraper/cache/priorities.xml.example</code>. Please don't edit this file manually, as it will be overwritten when you update Skyscraper. When a platform is scraped for the first time, it will automatically copy the example file to <code>/home/&lt;USER&gt;/.skyscraper/cache/&lt;PLATFORM&gt;/priorities.xml</code> unless it already exists. You can of course also copy the file yourself before scraping a platform. If you do so, be sure to remove the <code>.example</code> part of the filename so it's just called <code>priorities.xml</code>.</p> <p>Update locally cached data</p> <p>If you wish to update / refresh the locally cached resources for a particular platform and scraping module, Skyscraper provides the <code>--refresh</code> option. If this flag is set on the command line, any data in the resource cache will be updated with the new incoming data.</p> <p>If you wish to just refresh the data for a single rom simply scrape it with <code>-p &lt;PLATFORM&gt; -s &lt;SCRAPING MODULE&gt; &lt;RELATIVE OR FULL ROM PATH AND FILENAME&gt;</code> and the locally cached data for that particular rom will be updated / refreshed. You can add more filenames one after the other if you like. If any filename or paths has spaces in it, remember to double-quote it like so <code>\"relative path/to rom/rom filename.sfc\"</code>. You don't need the <code>--refresh</code> option when updating single files - it is implicit.</p> <p>When you've updated information in the resource cache, always remember to re-generate the game list by simply running <code>Skyscraper -p &lt;PLATFORM&gt;</code> when you're done. The updated resources won't be visible in your frontend until you do.</p>"},{"location":"CACHE/#the-resource-cache-folder-and-file-structures","title":"The Resource Cache Folder and File Structures","text":"<p>Preferred way of editing the cache is via the various <code>--cache</code> commands.</p> <p>Do not edit</p> <p>MOST FILES AND FOLDERS INSIDE THE <code>/home/&lt;USER&gt;/.skyscraper/cache</code> FOLDER ARE NOT MEANT TO BE MANIPULATED BY HAND! It can be done, but don't complain to me about the format of the database. It is NOT meant to be understood by humans. It is meant to be efficient for reading and parsing by Skyscraper itself. Same goes for the media files that reside in the subfolders.</p> <p>Don't leave custom files in here</p> <p>If you decide to add your own files to the subfolders, you risk them being deleted by Skyscraper later on if it is run with one of the cache cleanup command line options. You've been warned!</p> <p>Other cool stuff you CAN DO</p> <p>Each subfolder in the <code>/home/&lt;USER&gt;/.skyscraper/cache/</code> folder is self-contained and can be copied to other Skyscraper installations at your convenience. Just copy the folder itself over to some other computer that has Skyscraper 1.6.0 or later installed, and you can make use of the data when generating game lists. If you add it at a non-default location, set the custom folder with <code>-d &lt;FOLDER&gt;</code>.</p>"},{"location":"CACHE/#resource-cache-format","title":"Resource Cache Format","text":"<p>I do not recommend editing the <code>db.xml</code> resource cache files manually. But the format is simple, so you certainly can if you want to.</p> <p>Resource id</p> <p>The database consists of resource entries connected to a unique id. The id is calculated from the rom data or, in special cases, the filename (in cases where the file data is a script or a ROM gets changed by the gameplay). An entry can look like this:</p> <pre><code>&lt;resource id=\"&lt;ID KEY&gt;\" \n        type=\"&lt;RESOURCE TYPE&gt;\" \n      source=\"&lt;SCRAPING SOURCE&gt;\"\n   timestamp=\"&lt;UNIX TIMESTAMP IN MSECS&gt;\"&gt;Resource data&lt;/resource&gt;\n</code></pre> <p>Note</p> <p>Pre-3.3.0 versions of Skyscraper used <code>sha1</code> as the name of the unique id key. Later versions use <code>id</code>.</p>"},{"location":"CACHE/#resource-types","title":"Resource Types","text":""},{"location":"CACHE/#title","title":"title","text":"<p>A game title</p>"},{"location":"CACHE/#platform","title":"platform","text":"<p>A game platform</p>"},{"location":"CACHE/#description","title":"description","text":"<p>A game description</p>"},{"location":"CACHE/#publisher","title":"publisher","text":"<p>The publisher of a game</p>"},{"location":"CACHE/#developer","title":"developer","text":"<p>The developer of a game</p>"},{"location":"CACHE/#players","title":"players","text":"<p>How many players are supported by a game</p>"},{"location":"CACHE/#tags","title":"tags","text":"<p>List of game tags, most often genre related</p>"},{"location":"CACHE/#releasedate","title":"releasedate","text":"<p>The release date of a game</p>"},{"location":"CACHE/#ages","title":"ages","text":"<p>Game age rating, defined as youngest allowed age in years</p>"},{"location":"CACHE/#rating","title":"rating","text":"<p>Game rating, real number between 0 and 1</p>"},{"location":"CACHE/#cover","title":"cover","text":"<p>A cover image filename for a game (file exists in <code>covers</code> subfolder)</p>"},{"location":"CACHE/#screenshot","title":"screenshot","text":"<p>A screenshot image filename for a game (file exists in <code>screenshots</code> subfolder)</p>"},{"location":"CACHE/#wheel","title":"wheel","text":"<p>A wheel image filename for a game (file exists in <code>wheels</code> subfolder)</p>"},{"location":"CACHE/#marquee","title":"marquee","text":"<p>A marquee image filename for a game (file exists in <code>marquees</code> subfolder)</p>"},{"location":"CACHE/#texture","title":"texture","text":"<p>A texture image (disc/cartridge) filename for a game (file exists in <code>textures</code> subfolder)</p>"},{"location":"CACHE/#video","title":"video","text":"<p>A video file filename for a game (file exists in <code>videos</code> subfolder)</p>"},{"location":"CHANGELOG/","title":"Changelog","text":""},{"location":"CHANGELOG/#changes-of-this-fork","title":"Changes of this Fork","text":""},{"location":"CHANGELOG/#tba-version-392","title":"TBA (Version 3.9.2)","text":"<ul> <li>Feature: Import of data in XML format is now more lax (does not rely on     strict identical indention). Read also the hint     here</li> <li>Feature: Configuration option <code>tidyDesc</code> added. See documentation     here</li> <li>Feature: Documentation reviewed and hosted with mkdocs for ease of access.     See here</li> <li>Update: Added index of configuration parameters to <code>CONFIGINI.md</code>. Details     see here</li> <li>Update: Refactored <code>skyscraper.cpp</code> class. Factorised configuration settings     into <code>settings.cpp</code></li> <li>Update: Various other refactorings to remove duplicated code</li> <li>Fix: Quit Skyscraper when neither <code>-p &lt;PLATFORM&gt;</code> nor <code>--cache help</code> nor     <code>--flags help</code> is provided</li> <li>Fix: Warning remediated when NULL image was applied in composer/gamebox     rendering</li> </ul>"},{"location":"CHANGELOG/#2023-10-22-version-391","title":"2023-10-22 (Version 3.9.1)","text":"<ul> <li>Feature: Mobygames scraper genres limited to two most relevant genre     categories ('Basic Genre' and 'Gameplay')</li> <li>Update: Removed legacy and unused code</li> <li>Update: Code formatting (LLVM)</li> <li>Fix: TGDB scraper retrieves screens from <code>screenshot/</code> and as well     <code>screenshots/</code> URL path as some platforms (supported since configurable     platforms) have their screenshots served from <code>screenshots/</code>.</li> </ul>"},{"location":"CHANGELOG/#2023-10-20-version-390","title":"2023-10-20 (Version 3.9.0)","text":"<ul> <li>Feature: Mobygames scraper respects game id from mobygames.com website via     <code>--query=&lt;gameid&gt;</code>. Handy to hint to the right game information when usual     search returns false positives.</li> <li>Feature: Scrapers which provide an web API (Screenscraper, Mobygames, The     Games DB (tgdb)) have the full platform information shipped with this release     (see <code>&lt;scraper&gt;_platforms.json</code> files). These files are used as reference.</li> <li>Feature: Less 'aliases' maintenance needed in former <code>platforms.json</code>.</li> <li>Update: Streamlined external platform configuration. File <code>platforms.json</code> is     replaced by <code>peas.json</code> (platforms, extensions/formats, aliases and scrapers).     Precise platform determination for Screenscraper, Mobygames and TGDB via     <code>platform_idmap.csv</code> See platforms documentation for     details.</li> <li>Fix: Failed media download when TGDB provides PNG files instead of JPG files     and vice versa.</li> <li>Update: Scriptmodule for this Skyscraper now official part of RetroPie.</li> </ul>"},{"location":"CHANGELOG/#2023-09-23-version-3812309","title":"2023-09-23 (Version 3.8.1.2309)","text":"<ul> <li>Feature: OpenRetro scraper retrieves now also score/rating, if available for a     game. Precedence is to use reviews from external websites first (right     header), then the Score label (above the game details). See this     example</li> <li>Feature: Additionally to the existing import with rating values of 0, 0.5, 1,     1.5 ... 5 (\"Star rating\") it is possible to use 0.1 ... 1.0 scale for rating     in import files (EmulationStation <code>gamelist.xml</code> internal rating range). See     also import formats</li> <li>Fix: Wrong score/rating calculation from Mobygames scraper / Mobygames API.     See also this     gist on how     to update your existing Skyscraper <code>db.xml</code> files.</li> <li>Fix: Use of <code>--query</code> free-text search in OpenRetro scraper fixed. This bug     did not occur when the switch is ommitted and an Amiga WHDLoad file is provided     to Skyscraper.</li> <li>Fix: RetroPie Scriptmodule, removed surplus boolean negation (Thanks     @s1eve-mcdichae1)</li> <li>Fix: RetroPie Scriptmodule, fixed use of legacy option <code>--unattend</code> (Thanks     @windg)</li> <li>Update: RetroPie Scriptmodule, relaxed the remove function of the scriptmodule     to not zap the Skyscraper cache. Plus various cleanups.</li> </ul>"},{"location":"CHANGELOG/#2023-09-15-version-3802309","title":"2023-09-15 (Version 3.8.0.2309)","text":"<ul> <li>updated <code>mamemap.csv</code> from MAME 0.240 (Arcade).dat, fbneo.dat,     mame2003-plus.xml and cleanup of surplus device information</li> <li>update script for make <code>mamemap.csv</code> does no longer rely on mame binary</li> <li>removed discontinued <code>*.php</code> scripts</li> <li><code>platforms.json</code> sorted and formatted</li> <li>updated documentation especially to reflect the supported platforms</li> <li>scriptmodule file for RetroPie aligned to their naming convention</li> <li>Mobygames platform information refactored from hardwired <code>mobygames.cpp</code>.to     <code>mobygames.json</code></li> </ul>"},{"location":"CHANGELOG/#included-pull-requests","title":"Included Pull Requests","text":"<p>These pull requests from other repos have been merged into this fork.</p> <ul> <li>muldjord #362</li> <li>detain #14 (extensions only)</li> <li>detain #16</li> <li>detain #18</li> <li>detain #21</li> <li>detain #22</li> <li>detain #23</li> <li>detain #24</li> </ul>"},{"location":"CLIHELP/","title":"Command Line Options","text":""},{"location":"CLIHELP/#overview","title":"Overview","text":"<p>Look below to find a thorough description of all command line options available when using Skyscraper. These options should be used with the <code>Skyscraper</code> command.</p> <p>Also consider that almost all of these options are set at a useful default (and can therefore be left out) and should only be used / changed if your use case requires it.</p> <p>For RetroPie users</p> <p>If you've installed Skyscraper through the RetroPie-Setup script, it is recommended to create a symbolic link to the executable. Do this by running <code>sudo ln -s /opt/retropie/supplementary/skyscraper/Skyscraper /usr/local/bin/Skyscraper</code>. This will allow you to just type <code>Skyscraper</code> when running it from command line.</p> <p>Info</p> <p>Most of the options can also be set in the <code>/home/&lt;USER&gt;/.skyscraper/config.ini</code> file thus removing the need to type them on command line all the time. Check the config.ini doc here for more info on this.</p>"},{"location":"CLIHELP/#short-options","title":"Short Options","text":""},{"location":"CLIHELP/#-h-help","title":"-h, --help","text":"<p>Outputs the help text for all command line options to the terminal.</p> <p>Example(s)</p> <pre><code>Skyscraper --help\nSkyscraper -h\n</code></pre>"},{"location":"CLIHELP/#-p-platform","title":"-p &lt;PLATFORM&gt;","text":"<p>Sets the platform you wish to scrape. Supported platforms can be seen using the <code>--help</code> option described above.</p> <p>Running the following commands will scrape from all cached resources and generate a game list and composite artwork using the recipe in <code>/home/&lt;USER&gt;/.skyscraper/artwork.xml</code> (check the artwork documentation for more info on this here.</p> <p>Before running these commands you need to first gather some data into the cache. Please read the description of <code>-s &lt;MODULE&gt;</code> below.</p> <p>Example(s)</p> <pre><code>Skyscraper -p amiga\nSkyscraper -p snes\n</code></pre>"},{"location":"CLIHELP/#-s-module","title":"-s &lt;MODULE&gt;","text":"<p>Sets which scraping module you wish to gather data from. All data scraped from any of the modules will be cached in the resource cache and can then later be used to generate a game list for your frontend. Read more about this in the <code>-p &lt;PLATFORM&gt;</code> description above.</p> <p>To generate a game list from the resource cache, just leave out the <code>-s</code> option entirely.</p> <p>Example(s)</p> <pre><code>Skyscraper -p amiga -s openretro\nSkyscraper -p snes -s screenscraper\nSkyscraper -p amiga -s esgamelist\nSkyscraper -p snes -s import\n</code></pre> <p>To read more about each scraping module, check here.</p>"},{"location":"CLIHELP/#-u-key-or-useridpassword","title":"-u &lt;KEY or USERID:PASSWORD&gt;","text":"<p>Some scraping modules require a user key or a user id + password to work. Check the scraping module overview to see the specific requirements for each module here. Consider setting this in <code>config.ini</code> instead.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -s screenscraper -u &lt;userid:password&gt;\n</code></pre>"},{"location":"CLIHELP/#-i-path","title":"-i &lt;PATH&gt;","text":"<p>Sets the rom input folder. By default Skyscraper will look for roms in the <code>/home/&lt;user&gt;/RetroPie/roms/&lt;PLATFORM&gt;</code> folder. If your roms are located in a non-default location, you can set the input path using this option. Consider setting this in <code>config.ini</code> instead.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -i \"/path/to/your/snes/roms\"\n</code></pre>"},{"location":"CLIHELP/#-g-path","title":"-g &lt;PATH&gt;","text":"<p>Sets the game list export folder. By default Skyscraper exports the game list to the same directory as the rom input folder. This enables you to change that to a non-default location. Consider setting this in <code>config.ini</code> instead.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -s screenscraper -g \"/your/desired/game list/export/path\"\n</code></pre>"},{"location":"CLIHELP/#-o-path","title":"-o &lt;PATH&gt;","text":"<p>Sets the artwork / media output folder. By default Skyscraper outputs the composited artwork files to the game list export folder + <code>/media</code>. This allows you to change that to a non-default location. Read more about the artwork compositing here. Consider setting this in <code>config.ini</code> instead.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -s screenscraper -o \"/path/to/where/you/want/the/artwork/files\"\n</code></pre>"},{"location":"CLIHELP/#-t-1-8","title":"-t &lt;1-8&gt;","text":"<p>Sets the desired number of parallel threads to be run when scraping. By default it is set to 4.</p> <p>Note</p> <p>Some modules have maximum allowed threads. If you set this higher than the allowed value, it will be auto-adjusted.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -s thegamesdb -t 5\n</code></pre>"},{"location":"CLIHELP/#-f-frontend","title":"-f &lt;FRONTEND&gt;","text":"<p>Sets the frontend you wish to export a game list for. By default Skyscraper will export an EmulationStation game list, but other frontends are supported as well. If exporting for example for the <code>attractmode</code> frontend, please also take note of the required <code>-e</code> option that goes along with using the <code>attractmode</code> frontend. Consider setting this in <code>config.ini</code> instead.</p> <p>Check all supported frontends with '--help' and read a more about the details concerning each of them here.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -f pegasus\nSkyscraper -p snes -f attractmode -e snes\n</code></pre>"},{"location":"CLIHELP/#-e-string","title":"-e &lt;STRING&gt;","text":"<p>Info</p> <p>This option is applicable only when using the <code>-f attractmode</code> or the <code>-f pegasus</code> option.</p> <p>When using <code>-f attractmode</code> it is required to set the emulator to be used when generating the <code>attractmode</code> game list. On RetroPie the emulator name is mostly the same as the platform. Consider setting this in <code>config.ini</code> instead.</p> <p>It can optionally be used with <code>-f pegasus</code> to set the launch command used by the Pegasus game list. On RetroPie this defaults to the RetroPie launch command which works with RetroPie. Consider setting this in <code>config.ini</code> instead.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -f attractmode -e snes\n# On RetroPie\nSkyscraper -p snes -f pegasus -e \"/opt/retropie/supplementary/runcommand/runcommand.sh 0 _SYS_ snes\"\n</code></pre>"},{"location":"CLIHELP/#-m-0-100","title":"-m &lt;0-100&gt;","text":"<p>Some scraping modules are based on a filename or title based search. This option sets the minimum percentage any returned results need to match with in order for it to be accepted. For instance, the game <code>Wonderboy in Monsterland</code> might return the title <code>Wonder Boy in Monster Land</code> which is clearly a match. But it's not a 100% match. So it needs to be set relatively high, while still ignoring bad matches. By default it is set to 65 which has been tested to be a good middle-ground. Consider setting this in <code>config.ini</code> instead.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -s thegamesdb -m 50\n</code></pre>"},{"location":"CLIHELP/#-l-0-10000","title":"-l &lt;0-10000&gt;","text":"<p>Sets the maximum length of returned game descriptions. This is a convenience option if you feel like game descriptions are too long. By default it is set to 2500. Consider setting this in <code>config.ini</code> instead.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -l 500\n</code></pre>"},{"location":"CLIHELP/#-c-filename","title":"-c &lt;FILENAME&gt;","text":"<p>Sets a non-default config file. By default Skyscraper uses the file <code>/home/&lt;USER&gt;/.skyscraper/config.ini</code>.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -c \"/path/to/config.ini\"\n</code></pre>"},{"location":"CLIHELP/#-a-filename","title":"-a &lt;FILENAME&gt;","text":"<p>Sets a non-default XML file to use when setting up the artwork compositing. By default Skyscraper uses the file <code>/home/&lt;USER&gt;/.skyscraper/artwork.xml</code>. Read more about the artwork.xml format and customization options here. Consider setting this in <code>config.ini</code> instead.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -a \"/path/to/artwork.xml\"\n</code></pre>"},{"location":"CLIHELP/#-d-folder","title":"-d &lt;FOLDER&gt;","text":"<p>Sets a non-default location for the storing and loading of cached game resources. This is what is referred to in the docs as the resource cache. By default this folder is set to <code>/home/&lt;USER&gt;/.skyscraper/cache/&lt;PLATFORM&gt;</code>. Don't change this unless you have a good reason to (for instance if you want your cache to reside on a USB drive). The folder pointed to should be a folder with a Skyscraper <code>db.xml</code> file and its required subfolders inside of it (<code>covers</code>, <code>screenshots</code> etc.).</p> <p>Note</p> <p>If you wish to always use a certain location as base folder for your resource cache (for instance a folder on a USB drive), it is strongly recommended to set this in the <code>config.ini</code> file instead. Read more about the relevant <code>config.ini</code> option here.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -d \"/custom/cache/path\"\n</code></pre>"},{"location":"CLIHELP/#long-options","title":"Long Options","text":""},{"location":"CLIHELP/#-refresh","title":"--refresh","text":"<p>Skyscraper has a resource cache which works just like the browser cache in Firefox. If you scrape and gather resources for a platform with the same scraping module twice, it will grab the data from the cache instead of hammering the online servers again. This has the advantage in the case where you scrape a rom set twice, only the roms that weren't recognized the first time around will be fetched from the online servers. Everything else will be loaded from the cache.</p> <p>You can force all data to be refetched from the servers by setting this option, effectively updating the cached data with new data from the source.</p> <p>Note</p> <p>Only use this option if you know data has changed for several roms at the source. Otherwise you are hammering the servers for no reason.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -s screenscraper --refresh\n</code></pre>"},{"location":"CLIHELP/#-flags","title":"--flags  <p>From Skyscraper 3.5.0 all command-line options that change the scraping behaviour have been combined into this option. Check below for a complete list of all the available flags and what they do. You can also get this list by using <code>--flags help</code>.</p> <p>To enable multiple flags simply separate them by commas (eg. <code>--flags FLAG1,FLAG2</code>).</p>","text":""},{"location":"CLIHELP/#forcefilename","title":"forcefilename","text":"<p>This flag forces Skyscraper to use the filename (excluding extension) instead of the cached titles when generating a game list. Consider setting this in <code>config.ini</code> instead.</p> <p>Note</p> <p>If <code>nameTemplate</code> is set in <code>config.ini</code> this flag is ignored.</p>"},{"location":"CLIHELP/#interactive","title":"interactive","text":"<p>When gathering data from any of the scraping modules many potential entries will be returned. Normally Skyscraper chooses the best entry for you. But should you wish to choose the best entry yourself, you can enable this flag. Skyscraper will then list the returned entries and let you choose which one is the best one.</p>"},{"location":"CLIHELP/#nobrackets","title":"nobrackets","text":"<p>Use this flag to disable any bracket notes when generating the game list. It will disable notes such as <code>(Europe)</code> and <code>[AGA]</code> completely. This flag is only relevant when generating the game list. It makes no difference when gathering data into the resource cache. Consider setting this in <code>config.ini</code> instead.</p> <p>Note</p> <p>If <code>nameTemplate</code> is set in <code>config.ini</code> this flag is ignored.</p>"},{"location":"CLIHELP/#nocovers","title":"nocovers","text":"<p>Disables the caching of the resource type <code>cover</code> when scraping with any module. If you never use covers in your artwork configuration, this flag can save you some space. Consider setting this in <code>config.ini</code> instead.</p>"},{"location":"CLIHELP/#nocropblack","title":"nocropblack","text":"<p>Disables cropping away the black borders around screenshot resources when compositing the final frontend artwork.</p>"},{"location":"CLIHELP/#nohints","title":"nohints","text":"<p>Disables the \"Did you know\" hints when running Skyscraper. Consider setting this in <code>config.ini</code> instead.</p>"},{"location":"CLIHELP/#nomarquees","title":"nomarquees","text":"<p>Disables the caching of the resource type <code>marquee</code> when scraping with any module. If you never use marquees in your artwork configuration, this flag can save you some space. Consider setting this in <code>config.ini</code> instead.</p>"},{"location":"CLIHELP/#noresize","title":"noresize","text":"<p>By default, to save space, Skyscraper resizes large pieces of artwork before adding them to the resource cache. Adding this flag will disable this and save the artwork files exactly as they are retrieved from the scraping module. Consider setting this in <code>config.ini</code> instead.</p> <p>Note</p> <p>This is not related to the artwork compositing that happens when generating a game list. This is only related to how Skyscraper handles artwork when adding it to the resource cache while gathering data from the scraping modules.</p>"},{"location":"CLIHELP/#noscreenshots","title":"noscreenshots","text":"<p>Disables the caching of the resource type <code>screenshot</code> when scraping with any module. If you never use screenshots in your artwork configuration, this flag can save you some space. Consider setting this in <code>config.ini</code> instead.</p>"},{"location":"CLIHELP/#nosubdirs","title":"nosubdirs","text":"<p>By default Skyscraper will include roms located in subfolders. By adding this flag Skyscraper will only scrape the roms located directly in the input folder. See <code>-i &lt;PATH&gt;</code> above to read more about the rom input folder. Consider setting this in <code>config.ini</code> instead.</p>"},{"location":"CLIHELP/#notextures","title":"notextures","text":"<p>Disables the caching of the resource type <code>texture</code> when scraping with any module. If you never use textures (disc/cartridge) in your artwork configuration, this flag can save you some space. Consider setting this in <code>config.ini</code> instead.</p>"},{"location":"CLIHELP/#notidydesc","title":"notidydesc","text":"<p>Disables clean up some misformatting in scraped description:</p> <ol> <li>Heading and trailing spaces are stripped</li> <li>Multiple spaces between sentences are reduced to one space</li> <li>Bulletpoint beginning with * or \u25cf are replaced with a dash</li> <li>Stylized ellipsis (\u2026 Unicode:<code>&amp;#8230;</code>) is replace with three dots</li> <li>Multiple exclamation marks are reduced to one, unless for games titles are explicitly typed like that, like 'Super Punch-Out!!'.</li> </ol> <p>Consider setting this in <code>config.ini</code> instead.</p>"},{"location":"CLIHELP/#nowheels","title":"nowheels","text":"<p>Disables the caching of the resource type <code>wheel</code> when scraping with any module. If you never use wheels in your artwork configuration, this flag can save you some space. Consider setting this in <code>config.ini</code> instead.</p>"},{"location":"CLIHELP/#onlymissing","title":"onlymissing","text":"<p>This flag tells Skyscraper to skip all files which already have any piece of data from any source in the cache. This is useful if you just scraped almost all files from a platform succesfully with one source, and then want to only scrape the remaining games with a different source to fill in the holes. Normally Skyscraper will scrape all files again with the second source.</p>"},{"location":"CLIHELP/#pretend","title":"pretend","text":"<p>This flag is only relevant when generating a game list (by leaving out the <code>-s &lt;MODULE&gt;</code> option). It disables the game list generator and artwork compositor and only outputs the results of the potential game list generation to the terminal. It can be very useful to check exactly what and how the data will be combined from the resource cache.</p>"},{"location":"CLIHELP/#relative","title":"relative","text":"<p>Only relevant when generating an EmulationStation, a Retrobat or a Pegasus game list, with the <code>-f</code> option. Emulationstation is the default frontend when the <code>-f</code> option is left out. This forces the rom and any media paths (if they are the same as the input folder) inside the game list to be relative to the rom input folder. Consider setting this in <code>config.ini</code> instead.</p>"},{"location":"CLIHELP/#skipexistingcovers","title":"skipexistingcovers","text":"<p>When generating gamelists, skip processing covers that already exist in the media output folder.</p>"},{"location":"CLIHELP/#skipexistingmarquees","title":"skipexistingmarquees","text":"<p>When generating gamelists, skip processing marquees that already exist in the media output folder.</p>"},{"location":"CLIHELP/#skipexistingscreenshots","title":"skipexistingscreenshots","text":"<p>When generating gamelists, skip processing screenshots that already exist in the media output folder.</p>"},{"location":"CLIHELP/#skipexistingvideos","title":"skipexistingvideos","text":"<p>When generating gamelists, skip copying videos that already exist in the media output folder.</p>"},{"location":"CLIHELP/#skipexistingwheels","title":"skipexistingwheels","text":"<p>When generating gamelists, skip processing wheels that already exist in the media output folder.</p>"},{"location":"CLIHELP/#skipped","title":"skipped","text":"<p>If a rom has no resources attached to it in the cache, it will be left out when generating a game list file. It will still show up in the frontend (at least it does for EmulationStation) but it won't exist in the game list file. You can safely leave out this flag unless you need the empty entries for some reason. Consider setting this in <code>config.ini</code> instead.</p>"},{"location":"CLIHELP/#symlink","title":"symlink","text":"<p>Enabling this flag is currently only relevant while also using the <code>videos</code> flag. It basically means that Skyscraper will create a link to the cached videos instead of copying them when generating the game list media files. This will save a lot of space, but has the caveat that if you somehow remove the videos from the cache, the links will be broken and the videos then won't show anymore. Consider setting this in <code>config.ini</code> instead.</p>"},{"location":"CLIHELP/#theinfront","title":"theinfront","text":"<p>Game titles are returned from the scraping sources sometimes as 'The Game' and other times as 'Game, The'. Enabling this flag will force Skyscraper to always try and move 'The' to the front of the titles. If it is not enabled, Skyscraper will always try and move it to the end of the title, regardless of how it was originally returned by the scraping sources.</p> <p>Note</p> <p>When generating gamelists Skyscraper will still sort the games as if the game titles didn't have 'The' at the beginning.</p>"},{"location":"CLIHELP/#unattend","title":"unattend","text":"<p>When generating a game list Skyscraper will check if it already exists and ask if you want to overwrite it. And it will also ask if you wish to skip existing game list entries. By using this flag Skyscraper will always overwrite an existing game list and never skip existing entries. This is useful when scripting Skyscraper to avoid the need for user input. Consider setting this in <code>config.ini</code> instead.</p>"},{"location":"CLIHELP/#unattendskip","title":"unattendskip","text":"<p>When generating a game list Skyscraper will check if it already exists and ask if you want to overwrite it. And it will also ask if you wish to skip existing game list entries. By using this flag Skyscraper will always overwrite an existing game list and always skip existing entries. This is useful when scripting Skyscraper to avoid the need for user input. Consider setting this in <code>config.ini</code> instead.</p>"},{"location":"CLIHELP/#unpack","title":"unpack","text":"<p>Some scraping modules use file checksums to identify the game in their databases. If you've compressed your roms to zip or 7z files yourself, this can pose a problem in getting a good result. You can then try to use this flag. Doing so will extract the rom and do the file checksum on the rom itself instead of the compressed file.</p> <p>Info</p> <p>Only use this flag if you are having problems getting the roms identified from the compressed files. It slows down the scraping process significantly and should therefore be avoided if possible.</p>"},{"location":"CLIHELP/#videos","title":"videos","text":"<p>By default Skyscraper doesn't scrape and cache video resources because of the significant disk space required to save them. You can enable videos using this flag. Consider setting this in <code>config.ini</code> instead.</p> <p>Example(s)</p> <pre><code>Skyscraper -p amiga --flags forcefilename,nosubdirs,skipexistingwheels\nSkyscraper -p nes --flags videos,nomarquees\n</code></pre>"},{"location":"CLIHELP/#-cache","title":"--cache  <p>This is the cache master option. It contains several subcommands that allows you to manipulate the cached data for the selected platform.</p>  <p>Tip</p> <p>For any of these commands you can set a non-default resource cache folder with the <code>-d</code> option. The folder pointed to should be a folder with a Skyscraper <code>db.xml</code> file and its required subfolders inside of it (<code>covers</code>, <code>screenshots</code> etc.).</p>  <p>Read more about the resource cache here.</p>","text":""},{"location":"CLIHELP/#-cache-help","title":"--cache help","text":"<p>Outputs a description of all available <code>--cache</code> functions.</p>"},{"location":"CLIHELP/#-cache-editnewtype","title":"--cache edit[:new=&lt;TYPE&gt;]","text":"<p>Allows editing of any cached resources connected to your roms. The editing mode will go through each of the files in the queue one by one, allowing you to add and remove resources as needed. Any resource you add manually will be prioritized above all others.</p> <p>You can provide one or more filenames to the end of the command line or use the <code>--fromfile</code> option to edit the resources for just those files. You can use the <code>--startat</code> and <code>--endat</code> options to edit a span of roms. If none of those options are used, it will edit all of the roms in the input folder one by one.</p> <p>For efficiency, when adding a lot of resources of the same type, you can also add the optional <code>new=&lt;TYPE&gt;</code> which will make it very easy to batch insert resources of the defined type to all the files you are editing. <code>&lt;TYPE&gt;</code> can be any of the known textual resources: <code>title</code>, <code>platform</code>, <code>releasedate</code>, <code>developer</code>, <code>publisher</code>, <code>players</code>, <code>ages</code>, <code>genres</code>, <code>rating</code>, <code>description</code>.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes --cache edit &lt;FILENAME 1&gt; &lt;FILENAME 2&gt;\nSkyscraper -p snes --cache edit --startat &lt;FILENAME&gt; --endat &lt;FILENAME&gt;\nSkyscraper -p snes --cache edit:new=developer --startat &lt;FILENAME&gt; --endat &lt;FILENAME&gt;\nSkyscraper -p snes --cache edit\nSkyscraper -p snes --cache edit --fromfile \"/home/pi/.skyscraper/reports/report-snes-missing_developer-20190708.txt\"\nSkyscraper -p snes --cache edit:new=ages --fromfile \"/home/pi/.skyscraper/reports/report-snes-missing_ages-20190708.txt\"\n</code></pre>"},{"location":"CLIHELP/#-cache-mergefolder","title":"--cache merge:&lt;FOLDER&gt;","text":"<p>This option allows you to merge two resource caches together. It will merge the cache located at the <code>&lt;FOLDER&gt;</code> location into the default cache for the chosen platform. The path specified must be a path containing the <code>db.xml</code> file. You can also set a non-default destination to merge to with the <code>-d</code> option.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes --cache merge:\"path to/source/cache/snes\"\nSkyscraper -p snes --cache merge:\"path to/source/cache/snes\" -d \"/path to/nondefault/destination/cache/snes\"\n</code></pre>"},{"location":"CLIHELP/#-cache-purgekeywordmodule-andor-type","title":"--cache purge:&lt;KEYWORD|MODULE and/or TYPE&gt;","text":"<p>This is a powerful option that allows you to purge the requested resources from the resource cache connected to the selected platform.</p> <p>You can purge all resources from the cache for the chosen platform using the keyword <code>all</code>.</p> <p>You can purge specific resources from a certain module with <code>m=&lt;MODULE&gt;</code> or of a certain type with <code>t=&lt;TYPE&gt;</code> or a combination of the two separated by a <code>,</code>.</p> <p>Supported modules can be seen under <code>-s</code> when using the <code>--help</code> option. Supported types are: <code>title</code>, <code>platform</code>, <code>description</code>, <code>publisher</code>, <code>developer</code>, <code>ages</code>, <code>tags</code>, <code>rating</code>, <code>releasedate</code>, <code>cover</code>, <code>screenshot</code>, <code>wheel</code>, <code>marquee</code>, <code>video</code>.</p> <p>Possible dangerous command</p> <p>Purging anything from the cache cannot be undone, so please consider making a backup.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes --cache purge:all\nSkyscraper -p snes --cache purge:m=thegamesdb\nSkyscraper -p snes --cache purge:t=cover\nSkyscraper -p snes --cache purge:m=thegamesdb,t=cover\n</code></pre>"},{"location":"CLIHELP/#-cache-refresh","title":"--cache refresh","text":"<p>Same as --refresh.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -s screenscraper --cache refresh\n</code></pre>"},{"location":"CLIHELP/#-cache-reportmissingall-textual-artwork-media-or-resource1resource2","title":"--cache report:missing=&lt;all, textual, artwork, media or RESOURCE1,RESOURCE2,...&gt;","text":"<p>Will create report(s) containing all filenames of games missing the selected resource type(s). File(s) will be exported to <code>/home/&lt;USER&gt;/.skyscraper/reports/report-&lt;PLATFORM&gt;-missing_&lt;RESOURCE&gt;-yyyymmdd.txt</code></p> <p>You can use any of the following:</p> <ul> <li><code>all</code>: Creates reports for all resource types</li> <li><code>textual</code>: Creates reports for all textual resource types</li> <li><code>artwork</code>: Creates reports for all artwork related resource types excluding 'video'</li> <li><code>media</code>: Creates reports for all media resource types including 'video'</li> <li><code>type1</code>,<code>type2</code>,<code>type3</code>,...:</li> </ul> <p>Supported resource types are: <code>title</code>, <code>platform</code>, <code>description</code>, <code>publisher</code>, <code>developer</code>, <code>ages</code>, <code>tags</code>, <code>rating</code>, <code>releasedate</code>, <code>cover</code>, <code>screenshot</code>, <code>wheel</code>, <code>marquee</code>, <code>video</code>.</p> <p>Tip</p> <p>The reports can be fed back into Skyscraper using the <code>--fromfile &lt;REPORTFILE&gt;</code> option, which tells Skyscraper to only work on the files contained in the report. This is useful in combination with, for instance, the <code>--cache edit</code> option or the <code>--cache refresh</code>/<code>--refresh</code> (they are the same) option(s).</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes --cache report:missing=textual\nSkyscraper -p snes --cache report:missing=artwork\nSkyscraper -p snes --cache report:missing=developer\nSkyscraper -p snes --cache report:missing=publisher,screenshot\n</code></pre>"},{"location":"CLIHELP/#-cache-show","title":"--cache show","text":"<p>Shows the cache stats for the chosen platform. It will list how many resources of each type you currently have cached for each scraping module.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes --cache show\n</code></pre>"},{"location":"CLIHELP/#-cache-vacuum","title":"--cache vacuum","text":"<p>You can purge all resources that don't have any connection to your current romset for the selected platform by using the <code>vacuum</code> command. This is extremely useful if you've removed a bunch of roms from your collection and you wish to purge any cached data you don't need anymore.</p> <p>Possible dangerous command</p> <p>Vacuuming the cache cannot be undone, so please consider making a backup.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes --cache vacuum\n</code></pre>"},{"location":"CLIHELP/#-cache-validate","title":"--cache validate","text":"<p>This will test the integrity of the resource cache connected to the chosen platform. It will remove / clean out any stray files that aren't connected to an entry in the cache and vice versa. It's not really necessary to use this option unless you have manually deleted any of the cached files or entries in the <code>db.xml</code> file connected to the platform.</p> <p>Note</p> <p>This option doesn't clean up your game list media folders. You will need to do that yourself since Skyscraper has no idea what files you might keep in those folders. This option only relates to the resource cache database and related files.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes --cache validate\n</code></pre>"},{"location":"CLIHELP/#-fromfile-filename","title":"--fromfile &lt;FILENAME&gt; <p>Using this option is the equivalent to adding a bunch of filenames to work on directly on the commandline. It reads one line at a time from <code>&lt;FILENAME&gt;</code> and adds them to the queue of files to work on. This is very useful in combination with the <code>--cache edit</code> option or if you want to refresh data for just those files using <code>-s &lt;SCRAPING MODULE&gt;</code>.</p>  <p>Tip</p> <p>The <code>--cache report</code> option creates files that are directly usable with the <code>--fromfile</code> option.</p>  <p>Example(s)</p> <pre><code>Skyscraper -p snes --cache edit --fromfile \"/home/pi/.skyscraper/reports/report-snes-missing_developer-20190708.txt\"\nSkyscraper -p snes -s screenscraper --fromfile \"/home/pi/.skyscraper/reports/report-snes-missing_developer-20190708.txt\"\n</code></pre>","text":""},{"location":"CLIHELP/#-startat-filename","title":"--startat &lt;FILENAME&gt; <p>If you wish to work on a subset of your roms you can use this option to set the starting rom. Use it in conjunction with the <code>--endat</code> option described below to further narrow the subset of files.</p>  <p>Note</p> <p>Enabling this option automatically sets the <code>--refresh</code> option and enables the <code>nosubdirs</code> flag.</p>   <p>Tip</p> <p>Instead of using this option, if you just want to gather resources for one or two roms, you can provide the filename(s) directly on the command like so: <code>$ Skyscraper -p snes -s thegamesdb \"/full/or/partial/path/to/rom.zip\"</code>. You can also use the <code>--fromfile</code> option.</p>  <p>Example(s)</p> <pre><code>Skyscraper -p snes --cache edit --startat \"rom name.zip\"\nSkyscraper -p snes -s thegamesdb --startat \"partial/path/to/rom name.zip\"\n</code></pre>","text":""},{"location":"CLIHELP/#-endat-filename","title":"--endat &lt;FILENAME&gt; <p>If you wish to work on a subset of your roms you can use this option to set the rom to end at. Use it in conjunction with the <code>--startat</code> option described above to further narrow the subset of files.</p>  <p>Note</p> <p>Enabling this option automatically sets the <code>--refresh</code> option and enables the <code>nosubdirs</code> flag.</p>   <p>Tip</p> <p>Instead of using this option, if you just want to gather resources for one or two roms, you can provide the filename(s) directly on the command like so: <code>$ Skyscraper -p snes -s thegamesdb \"/full/or/partial/path/to/rom.zip\"</code>. You can also use the <code>--fromfile</code> option.</p>  <p>Example(s)</p> <pre><code>Skyscraper -p snes --cache edit --endat \"rom name.zip\"\nSkyscraper -p snes -s thegamesdb --endat \"partial/path/to/rom name.zip\"\n</code></pre>","text":""},{"location":"CLIHELP/#-includepattern-pattern-1pattern-2","title":"--includepattern &lt;PATTERN 1,PATTERN 2&gt; <p>Per platform Skyscraper have default file extensions that it will accept. This option allows you to only include certain files within that scope. The pattern is a simple asterisk type pattern. You can add several patterns by separating them with ','. In cases where you need to match for a comma you need to escape it as '\\,' (see last example).</p>  <p>Info</p> <p>Remember to double-quote the pattern as seen in the examples to avoid odd behaviour.</p>   <p>Tip</p> <p>You might also want to check out the file extension options.</p>  <p>Example(s)</p> <pre><code>Skyscraper -p snes -s screenscraper --includepattern \"Super*\"\nSkyscraper -p amiga --includepattern \"*AGA*\"\nSkyscraper -p amiga --includepattern \"*AGA*,Super*\"\nSkyscraper -p amiga --includepattern \"*AGA*,Super*,*\\, The\"\n</code></pre>","text":""},{"location":"CLIHELP/#-excludepattern-pattern-1-pattern-2","title":"--excludepattern &lt;PATTERN 1, PATTERN 2&gt; <p>Per platform Skyscraper have default file extensions that it will accept. This option allows you to exclude certain files within that scope. The pattern is a simple asterisk type pattern. You can add several patterns by separating them with ','. In cases where you need to match for a comma you need to escape it as '\\,' (see last example).</p>  <p>Info</p> <p>Remember to double-quote the pattern as seen in the examples to avoid odd behaviour.</p>   <p>Tip</p> <ol> <li>You might also want to check out the file extension options.</li> <li>You might also want to check out the <code>--excludefrom</code> option.</li> <li>If you create a file named <code>.skyscraperignore</code> within any subfolder of the input dir, all files from that directory will be ignored by Skyscraper.</li> </ol>  <p>Example(s)</p> <pre><code>Skyscraper -p snes -s screenscraper --excludepattern \"*[BIOS]*\"\nSkyscraper -p amiga --excludepattern \"AGA*\"\nSkyscraper -p amiga --excludepattern \"*AGA*,Super*\"\nSkyscraper -p amiga --excludepattern \"*AGA*,Super*,*\\, The\"\n</code></pre>","text":""},{"location":"CLIHELP/#-includefrom-filename","title":"--includefrom &lt;FILENAME&gt; <p>Tells Skyscraper to only include the files listed in FILENAME. One filename per line (with FULL path, eg. '/home/pi/RetroPie/roms/snes/subdir/somefile.zip').</p> <p>This file can be generated with the '--cache report:missing' option or made manually.</p>  <p>Tip</p> <p>You might also want to check out the <code>includepattern</code> option.</p>  <p>Example(s)</p> <pre><code>Skyscraper -p snes -s screenscraper --includefrom \"/home/pi/.skyscraper/includes.txt\"\n</code></pre>","text":""},{"location":"CLIHELP/#-excludefrom-filename","title":"--excludefrom &lt;FILENAME&gt; <p>Tells Skyscraper to exclude the files listed in FILENAME. One filename per line (with FULL path, eg. '/home/pi/RetroPie/roms/snes/subdir/somefile.zip').</p> <p>This file can be generated with the <code>--cache report:missing</code> option or made manually.</p>  <p>Tip</p> <p>You might also want to check out the <code>excludepattern</code> option.</p>  <p>Example(s)</p> <pre><code>Skyscraper -p snes -s screenscraper --excludefrom \"/home/pi/.skyscraper/excludes.txt\"\n</code></pre>","text":""},{"location":"CLIHELP/#-maxfails-1-200","title":"--maxfails &lt;1-200&gt; <p>Not all scraping modules support all platforms. This means that you can potentially start a scraping run with a module and a platform that is incompatible. This will hammer the servers for potentially hundreds of roms but provide 0 results for any of them. To avoid this Skyscraper has a builtin limit for initially allowed failed rom lookups. If this is reached it will quit. Setting this option allows you to set this limit yourself, but not above a maximum of 200. The default limit is 42. Don't change this unless you have a very good reason to do so.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -s thegamesdb --maxfails 75\n</code></pre>","text":""},{"location":"CLIHELP/#-query-string","title":"--query &lt;STRING&gt; <p>For most modules a search query is sent to the scraping module in an URL format. This means that a filename such as \"Rick Dangerous.lha\" becomes \"rick+dangerous\". The '+' here means a space. You could probably also use the URL encoded space \"rick%20dangerous\" but my tests show that most modules expect spaces as '+'. And it is the \"rick+dangerous\" part that you, as the user, can pass as the query, like so:</p> <pre><code>$ Skyscraper -p &lt;PLATFORM&gt; -s &lt;MODULE&gt; --query \"rick+dangerous\" &lt;FILENAME&gt;\n</code></pre> <p>Remember to also add a filename that you wish to use the override with. Otherwise the query will be ignored.</p> <p>But not all of the scraping modules are search name based. For instance, the <code>screenscraper</code> module can use a variety of different search methods. So for screenscraper you also have the option of overriding the checksums it uses to search for a game. This is especially convenient in cases where a filename exists multiple times in their database and your own local file doesn't match with any of the connected checksums (maybe you've compressed the rom yourself). In this case you can look up one of the working checksums on the Screenscraper website (screenscraper.fr) and override the checksum.</p> <p>You can use any combination of <code>crc=&lt;CHECKSUM&gt;</code>, <code>md5=&lt;CHECKSUM&gt;</code>, <code>sha1=&lt;CHECKSUM&gt;</code> and <code>romnom=&lt;FILENAME&gt;</code> (without the <code>&lt;</code> and <code>&gt;</code>! Also \"romnom\" is \"rom name\" in French - Screenscraper is operated from France). Most times you only need one of these, but you can combine them by separating them with a <code>&amp;</code>.</p> <p>The Mobygames scraper supports the romname directly in the <code>--query</code> parameter, but also accepts the game id from the mobygames site which you can find when manually looking up a game in the \"Identifiers\" section of the game details page.</p> <p>The <code>--query</code> option is an experts only option, but it's very useful to get results for those last difficult roms.</p> <p>Example(s)</p> <pre><code>$ Skyscraper -p snes -s thegamesdb --query \"rick+dangerous\" /full/or/partial/path/to/rom.zip\n$ Skyscraper -p snes -s screenscraper --query \"md5=&lt;CHECKSUM&gt;\" /full/or/partial/path/to/rom.zip\n$ Skyscraper -p snes -s screenscraper --query \"romnom=file%20name.zip\" /full/or/partial/path/to/rom.zip\n$ Skyscraper -p snes -s screenscraper --query \"sha1=&lt;CHECKSUM&gt;&amp;romnom=file%20name.zip\" /full/or/partial/path/to/rom.zip\n$ Skyscraper -p ports -s mobygames --query \"14576\" \"/home/pi/RetroPie/roms/ports/Head over Heels.sh\"\n</code></pre>","text":""},{"location":"CLIHELP/#-addext-extension","title":"--addext &lt;EXTENSION&gt; <p>If you have a rom that Skyscraper doesn't even try to gather data for, it might be because it has a file extension that isn't currently supported. This option allows you to temporarily add support for any file extension. If you feel like you are using a file extension that ought to be supported by default, please report it so it can be added in a later version of Skyscraper. Consider setting this in <code>config.ini</code> instead.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -s thegamesdb --addext *.ext\nSkyscraper -p snes -s thegamesdb --addext \"*.ext1 *.ext2\"\n</code></pre>","text":""},{"location":"CLIHELP/#-lang-code","title":"--lang &lt;CODE&gt; <p>Adds the specified language to the top of the existing default internal language priority list. Read more about languages here. Only one language is supported with this configuration. For a permanent setup you should consider setting this in <code>config.ini</code> instead.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -s screenscraper --lang es\n</code></pre>","text":""},{"location":"CLIHELP/#-region-code","title":"--region &lt;CODE&gt; <p>Adds the specified region to the top of the existing default internal region priority list. Only one region is supported with this configuration. For a permanent setup you should consider setting this in <code>config.ini</code> instead.</p> <p>Read more about how regions are handled in general here.</p>  <p>Info</p> <p>Setting this will overwrite any region auto-detected from the file name.</p>  <p>Example(s)</p> <pre><code>Skyscraper -p snes -s screenscraper --region jp\n</code></pre>","text":""},{"location":"CLIHELP/#-verbosity-0-3","title":"--verbosity &lt;0-3&gt; <p>Sets how verbose Skyscraper should be when running. Default level is 0. The higher the value, the more info Skyscraper will output to the terminal while running. Consider setting this in <code>config.ini</code> instead.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -s screenscraper --verbosity 3\n</code></pre>","text":""},{"location":"CLIHELP/#deprecated-options","title":"Deprecated Options","text":"<p>These options may be removed at any future version of Skyscraper without prior notice. If you still use them, do switch to the replacement option listed below.</p>"},{"location":"CLIHELP/#-forcefilename","title":"--forcefilename <p>This option is deprecated! Please set it using the <code>--flags forcefilename</code> option instead.</p>","text":""},{"location":"CLIHELP/#-interactive","title":"--interactive <p>This option is deprecated! Please set it using the <code>--flags interactive</code> option instead.</p>","text":""},{"location":"CLIHELP/#-nobrackets","title":"--nobrackets <p>This option is deprecated! Please set it using the <code>--flags nobrackets</code> option instead.</p>","text":""},{"location":"CLIHELP/#-nocovers","title":"--nocovers <p>This option is deprecated! Please set it using the <code>--flags nocovers</code> option instead.</p>","text":""},{"location":"CLIHELP/#-nohints","title":"--nohints <p>This option is deprecated! Please set it using the <code>--flags nohints</code> option instead.</p>","text":""},{"location":"CLIHELP/#-nomarquees","title":"--nomarquees <p>This option is deprecated! Please set it using the <code>--flags nomarquees</code> option instead.</p>","text":""},{"location":"CLIHELP/#-noresize","title":"--noresize <p>This option is deprecated! Please set it using the <code>--flags</code> option instead.</p>","text":""},{"location":"CLIHELP/#-noscreenshots","title":"--noscreenshots <p>This option is deprecated! Please set it using the <code>--flags noscreenshots</code> option instead.</p>","text":""},{"location":"CLIHELP/#-nosubdirs","title":"--nosubdirs <p>This option is deprecated! Please set it using the <code>--flags nosubdirs</code> option instead.</p>","text":""},{"location":"CLIHELP/#-nowheels","title":"--nowheels <p>This option is deprecated! Please set it using the <code>--flags nowheels</code> option instead.</p>","text":""},{"location":"CLIHELP/#-onlymissing","title":"--onlymissing <p>This option is deprecated! Please set it using the <code>--flags onlymissing</code> option instead.</p>","text":""},{"location":"CLIHELP/#-pretend","title":"--pretend <p>This option is deprecated! Please set it using the <code>--flags pretend</code> option instead.</p>","text":""},{"location":"CLIHELP/#-relative","title":"--relative <p>This option is deprecated! Please set it using the <code>--flags relative</code> option instead.</p>","text":""},{"location":"CLIHELP/#-skipped","title":"--skipped <p>This option is deprecated! Please set it using the <code>--flags skipped</code> option instead.</p>","text":""},{"location":"CLIHELP/#-symlink","title":"--symlink <p>This option is deprecated! Please set it using the <code>--flags symlink</code> option instead.</p>","text":""},{"location":"CLIHELP/#-unattend","title":"--unattend <p>This option is deprecated! Please set it using the <code>--flags unattend</code> option instead.</p>","text":""},{"location":"CLIHELP/#-unattendskip","title":"--unattendskip <p>This option is deprecated! Please set it using the <code>--flags unattendskip</code> option instead.</p>","text":""},{"location":"CLIHELP/#-unpack","title":"--unpack <p>This option is deprecated! Please set it using the <code>--flags unpack</code> option instead.</p>","text":""},{"location":"CLIHELP/#-videos","title":"--videos <p>This option is deprecated! Please set it using the <code>--flags videos</code> option instead.</p>","text":""},{"location":"CONFIGINI/","title":"The config.ini File","text":""},{"location":"CONFIGINI/#configini-options","title":"config.ini Options","text":"<p>Look below to find a thorough description of all options and sections available in the <code>/home/&lt;USER&gt;/.skyscraper/config.ini</code> configuration file. These options will then be applied whenever running Skyscraper with the <code>Skyscraper</code> command.</p> <p>Please take note that almost all of these options are set at a useful default as documented here (and can therefore be left out) and should only be set if your use case requires it.</p> <p>Warning</p> <p>Some users seem to have a habbit of editing the <code>/home/&lt;USER&gt;/skysource/config.ini</code> file. This is not the correct file! Please read the first paragraph. :)</p> <p>Options can be set on four levels; either <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code> or <code>[&lt;SCRAPER&gt;]</code>.</p> <p>Settings in the <code>[main]</code> section will always be set regardless of selected platform, frontend and module.</p> <p><code>&lt;PLATFORM&gt;</code> can be any of the supported platforms (check list with <code>--help</code> under the <code>-p</code> option), in which case the settings will only be applied while scraping that particular platform.</p> <p><code>&lt;FRONTEND&gt;</code> can be any of the supported frontends (check list with <code>--help</code> under the <code>-f</code> option), in which case the settings will only be applied while scraping for that particular frontend.</p> <p><code>&lt;SCRAPER&gt;</code> can be any of the supported scraping modules (check list with <code>--help</code> under the <code>-s</code> option), in which case the settings will only be applied while scraping with that particular scraping module.</p> <p>Each section can have overlapping parameters. In case where a certain option exists in several sections they are prioritized as scraping module first, then frontend, then platform and lastly main. Any commandline option which relates to an configuration setting in <code>config.ini</code> has highest precedence, regardless of the other four levels respective sections.</p> <p>You can find an example config file at <code>/home/&lt;USER&gt;/.skyscraper/config.ini.example</code>. This file contains all available options. Just copy the file to <code>config.ini</code> and uncomment and edit the ones you wish to use by removing the <code>#</code> or <code>;</code> in front of the variables. Remember to also uncomment the section the option relates to such as <code>[main]</code> or <code>[amiga]</code>.</p> <p>Note</p> <p>You can set a custom configuration file with the <code>-c &lt;FILENAME&gt;</code> command line option. Read more about all available command line options here.</p> <p>Example <code>config.ini</code>:</p> <pre><code>[main]\ninputFolder=\"/path/to/your/roms\"\ncacheFolder=\"/path/to/your/desired/db/cache/base/folder\"\ngameListBackup=\"true\"\nvideos=\"true\"\nunattend=\"true\"\nverbosity=\"1\"\nlang=\"ja\"\nregion=\"jp\"\ncacheMarquees=\"false\"\n\n[amiga]\ninputFolder=\"/specific/path/just/for/amiga/roms\"\ncacheFolder=\"/specific/path/just/for/amiga/cache\"\nminMatch=\"50\"\nmaxLength=\"200\"\n\n[pegasus]\nartworkXml=\"artwork-pegasus.xml\"\nmaxLength=\"10000\"\n\n[screenscraper]\nuserCreds=\"USER:PASSWORD\"\n</code></pre>"},{"location":"CONFIGINI/#index-of-options-with-applicable-sections","title":"Index of Options with Applicable Sections","text":"<p>This is an alphabetical index of all configuration options including the sections they may be applied to.</p> Parameter <code>[main]</code> <code>[&lt;PLATFORM&gt;]</code> <code>[&lt;FRONTEND&gt;]</code> <code>[&lt;SCRAPER&gt;]</code> addExtensions Y Y artworkXml Y Y Y brackets Y Y Y cacheCovers Y Y Y cacheFolder Y Y cacheMarquees Y Y Y cacheRefresh Y Y cacheResize Y Y Y cacheScreenshots Y Y Y cacheTextures Y Y Y cacheWheels Y Y Y cropBlack Y Y Y emulator Y Y Y endAt Y Y excludeFrom Y Y excludePattern Y Y Y extensions Y forceFilename Y Y Y frontend Y gameListBackup Y Y gameListFolder Y Y Y hints Y importFolder Y Y includeFrom Y Y includePattern Y Y Y inputFolder Y Y interactive Y Y Y jpgQuality Y Y Y lang Y Y langPrios Y Y launch Y Y Y maxFails Y maxLength Y Y Y Y mediaFolder Y Y Y mediaFolderHidden Y minMatch Y Y Y nameTemplate Y Y platform Y pretend Y Y region Y Y regionPrios Y Y relativePaths Y Y scummIni Y skipped Y Y Y spaceCheck Y startAt Y Y subdirs Y Y symlink Y Y Y theInFront Y Y Y threads Y Y Y tidyDesc Y Y Y unattend Y Y Y Y unattendSkip Y Y Y Y unpack Y Y userCreds Y verbosity Y Y Y videoConvertCommand Y Y videoConvertExtension Y Y videoPreferNormalized Y videos Y Y Y Y videoSizeLimit Y Y Y"},{"location":"CONFIGINI/#inputfolder","title":"inputFolder","text":"<p>Sets the rom input folder. By default Skyscraper will look for roms in the <code>/home/&lt;USER&gt;/RetroPie/roms/&lt;PLATFORM&gt;</code> folder. If your roms are located in a non-default location, you can set the input path using this option.</p> <p>Note</p> <p>If this is set in the <code>[main]</code> section it will automatically add <code>/&lt;PLATFORM&gt;</code> to the end of the path. If you want better control consider adding it to a <code>[&lt;PLATFORM&gt;]</code> section instead where it will be used as is.</p> <p>Default value: <code>/home/pi/RetroPie/roms/&lt;PLATFORM&gt;</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p>"},{"location":"CONFIGINI/#gamelistfolder","title":"gameListFolder","text":"<p>Sets the game list export folder. By default Skyscraper exports the game list to the same directory as the rom input folder. This enables you to change that to a non-default location.</p> <p>Note</p> <p>If this is set in the <code>[main]</code> section it will automatically add <code>/&lt;PLATFORM&gt;</code> to the end of the path. If you want better control consider adding it to a <code>[&lt;PLATFORM&gt;]</code> section instead where it will be used as is.</p> <p>Default value: <code>/home/pi/RetroPie/roms/&lt;PLATFORM&gt;</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#gamelistbackup","title":"gameListBackup","text":"<p>When set to true Skyscraper will create a backup of the existing game list each time it is run in game list generation mode (this mode is enabled by leaving out the <code>-s MODULE</code> option). The filename and path of the backup will be equal to the existing game list but have a timestamp appended to the name of the format <code>-yyyyMMdd-hhmmss</code> (eg. <code>gamelist.xml-20200530-115900</code>).</p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#mediafolder","title":"mediaFolder","text":"<p>Sets the artwork / media output folder. By default Skyscraper outputs the composited artwork files to the game list export folder extended with <code>/media</code>. This allows you to change that to a non-default location.</p> <p>Read more about the artwork compositing here.</p> <p>Note</p> <p>If this is set in the <code>[main]</code> section it will automatically add <code>/&lt;PLATFORM&gt;</code> to the end of the path. If you want better control consider adding it to a <code>[&lt;PLAFORM&gt;]</code> section instead where it will be used as is.</p> <p>Default value: <code>/home/pi/RetroPie/roms/&lt;PLATFORM&gt;/media</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#mediafolderhidden","title":"mediaFolderHidden","text":"<p>By default Skyscraper uses the <code>&lt;PLATFORM&gt;/media</code> folder when generating EmulationStation media. Setting this option will change that to <code>&lt;PLATFORM&gt;/.media</code>. Notice the <code>.</code> which hides the folder, which can speed up the initial EmulationStation loading sequence when using slow storage such as network file systems.</p> <p>This option is ignored if you set the media folder manually.</p> <p>Note</p> <p>Remember to remove your old <code>&lt;PLATFORM&gt;/media</code> folders if you enable this option.</p> <p>Default value: <code>false</code> Allowed in sections: Only for frontends <code>[emulationstation]</code> or <code>[retrobat]</code></p>"},{"location":"CONFIGINI/#cachefolder","title":"cacheFolder","text":"<p>Sets a non-default location for the storing and loading of cached game resources. This is what is referred to in the docs as the resource cache. By default this folder is set to <code>/home/&lt;USER&gt;/.skyscraper/cache/&lt;PLATFORM&gt;</code>. Don't change this unless you have a good reason to (for instance if you want your cache to reside on a USB drive).</p> <p>Note</p> <p>If this is set in the <code>[main]</code> section (recommended) it will automatically add <code>/&lt;PLATFORM&gt;</code> to the end of the path. If you want better control consider adding it to a <code>[&lt;PLAFORM&gt;]</code> section instead where it will be used as is.</p> <p>Default value: <code>/home/pi/.skyscraper/cache/&lt;PLATFORM&gt;</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p>"},{"location":"CONFIGINI/#cacheresize","title":"cacheResize","text":"<p>By default, to save space, Skyscraper resizes large pieces of artwork before adding them to the resource cache. Setting this option to <code>\"false\"</code> will disable this and save the artwork files with their original resolution. Beware that Skyscraper converts all artwork resources to lossless PNG's when saving them. High resolution images such as covers will take up a lot of space! So set this to <code>\"false\"</code> with caution.</p> <p>Note</p> <p>This is not related to the artwork compositing that happens when generating a game list. This is only related to how Skyscraper handles artwork when adding it to the resource cache while gathering data from the scraping modules.</p> <p>To read about artwork compositing go here instead.</p> <p>Default value: <code>true</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#cacherefresh","title":"cacheRefresh","text":"<p>Skyscraper has a resource cache which works just like the browser cache in Firefox. If you scrape and gather resources for a platform with the same scraping module twice, it will grab the data from the cache instead of hammering the online servers again. This has the advantage in the case where you scrape a rom set twice, only the roms that weren't recognized the first time around will be fetched from the online servers. Everything else will be loaded from the cache.</p> <p>You can force all data to be refetched from the servers by setting this option to <code>cacheRefresh=\"true\"</code>, effectively updating the cached data with new data from the source.</p> <p>Warning</p> <p>Only set this option to true if you know data has changed for several roms at the source. Otherwise you are hammering the servers for no reason.</p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#nametemplate","title":"nameTemplate","text":"<p>By default Skyscraper uses just the title as the game name when generating gamelists for any frontend. You can change this to suit your personal preference by setting this option. It works by replacing certain tokens in the name template with the corresponding data. The valid tokens are:</p> <ul> <li><code>%t</code>: The game title as returned by the scraping sources without bracket information (see <code>%b</code> and <code>%B</code> below)</li> <li><code>%f</code>: The game filename without extension and bracket information (see <code>%b</code> and <code>%B</code> below)</li> <li><code>%b</code>: The game <code>()</code> bracket information. This information often comes from the filename, but can also come from the scraping source title (eg. <code>(USA)</code> or <code>(en,fr,de)</code>)</li> <li><code>%B</code>: The game <code>[]</code> bracket information. This information often comes from the filename, but can also come from the scraping source title (eg. <code>[disk 1 of 2]</code> or <code>[AGA]</code>)</li> <li><code>%a</code>: The age restriction as returned by the scraping sources (eg. <code>16+</code>)</li> <li><code>%d</code>: The game developer as returned by the scraping sources</li> <li><code>%p</code>: The game publisher as returned by the scraping sources</li> <li><code>%r</code>: The game rating as returned by the scraping sources (<code>0.0</code> to <code>5.0</code>)</li> <li><code>%P</code>: The number of players as returned by the scraping sources</li> <li><code>%D</code>: The game release date with format <code>yyyy-mm-dd</code></li> </ul> <p>This option also support template groups separated by <code>;</code> within the template. The template parser will go over each group. If a group only has empty variables it will not be included in the final game name. So for a template such as <code>%t;, %P player(s)</code> where the <code>%P</code> is empty because no scraping source has provided the info, it will leave out the <code>, %P player(s)</code> part entirely resulting in the title <code>Game Name</code>. If this was not separated by <code>;</code> the resulting game name would end up being <code>Game Name, player(s)</code>.</p> <p>Example(s)</p> <pre><code>nameTemplate=\"%t [%f];, %P player(s)\"\n</code></pre> <p>Will result in: <code>1945k III [1945kiii], 2 player(s)</code></p> <p>Default value: unset Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p>"},{"location":"CONFIGINI/#tidydesc","title":"tidyDesc","text":"<p>Cleans up some misformatting in scraped description:</p> <ol> <li>Heading and trailing spaces are stripped</li> <li>Multiple spaces between sentences are reduced to one space</li> <li>Bulletpoint beginning with * or \u25cf are replaced with a dash</li> <li>Stylized ellipsis (\u2026 Unicode:<code>&amp;#8230;</code>) is replaced with three dot characters</li> <li>Multiple exclamation marks are reduced to one, unless for game titles are explicitly typed like that, like 'Super Punch-Out!!'.</li> </ol> <p>Quote</p> <p>'Multiple exclamation marks,' he went on, shaking his head, 'are a sure sign of a diseased mind.' -- Eric by Terry Pratchett</p> <p>Default value: <code>true</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#jpgquality","title":"jpgQuality","text":"<p>Sets the default jpg quality when saving image resources to the cache. This will be ignored if <code>--flags noresize</code> is set. Default is 95.</p> <p>All screenshots and any image resource that uses transparency will always be saved as PNG images. In those cases this setting will be ignored as PNG format is lossless.</p> <p>Default value: <code>95</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#cachecovers","title":"cacheCovers","text":"<p>Enables/disables the caching of the resource type <code>cover</code> when scraping with any module. If you never use covers in your artwork configuration, setting this to <code>\"false\"</code> can save you some space.</p> <p>Default value: <code>true</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#cachetextures","title":"cacheTextures","text":"<p>Enables/disables the caching of the resource type <code>cover</code> when scraping with any module. If you never use covers in your artwork configuration, setting this to <code>\"false\"</code> can save you some space.</p> <p>Default value: <code>true</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#cachescreenshots","title":"cacheScreenshots","text":"<p>Enables/disables the caching of the resource type <code>screenshot</code> when scraping with any module. If you never use screenshots in your artwork configuration, setting this to <code>\"false\"</code> can save you some space.</p> <p>Default value: <code>true</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#cropblack","title":"cropBlack","text":"<p>Enables/disables cropping away the black borders around the screenshot resources when compositing the final frontend gamelist artwork.</p> <p>Default value: <code>true</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#cachewheels","title":"cacheWheels","text":"<p>Enables/disables the caching of the resource type <code>wheel</code> when scraping with any module. If you never use wheels in your artwork configuration, setting this to <code>\"false\"</code> can save you some space.</p> <p>Default value: <code>true</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#cachemarquees","title":"cacheMarquees","text":"<p>Enables/disables the caching of the resource type <code>marquee</code> when scraping with any module. If you never use marquees in your artwork configuration, setting this to <code>\"false\"</code> can save you some space.</p> <p>Default value: <code>true</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#importfolder","title":"importFolder","text":"<p>Sets a non-default folder when scraping using the <code>-s import</code> module. By default this is set to <code>/home/&lt;USER&gt;/.skyscraper/import</code> and will also look for a <code>/&lt;PLATFORM&gt;</code> inside of the chosen folder. Read more about the <code>-s import</code> module here.</p> <p>Default value: <code>/home/pi/.skyscraper/import/&lt;PLATFORM&gt;</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p>"},{"location":"CONFIGINI/#unpack","title":"unpack","text":"<p>Some scraping modules use file checksums to identify the game in their databases. If you've compressed your roms to zip or 7z files yourself, this can pose a problem in getting a good result. You can then try setting this option to <code>\"true\"</code>. Doing so will extract the rom and do the file checksum on the rom itself instead of the compressed file.</p> <p>Info</p> <p>Only enable this option if you are having problems getting the roms identified from the compressed files. It slows down the scraping process significantly and should therefore be avoided if possible.</p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p>"},{"location":"CONFIGINI/#frontend","title":"frontend","text":"<p>Sets the frontend you wish to export a game list for. By default Skyscraper will export an EmulationStation game list, but other frontends are supported as well.</p> <p>If exporting for the <code>attractmode</code> frontend, please also take note of the required <code>emulator=\"\"</code> option that goes along with using the <code>attractmode</code> frontend.</p> <p>If exporting for the <code>pegasus</code> frontend, please also take note of the optional <code>launch=\"\"</code> option that allows you to set the launch parameter used by Pegasus.</p> <p>Use as value for the frontend option the frontend name in all lowercase and with alphabetical characters only: <code>emulationstation</code>, <code>pegasus</code>, <code>retrobat</code>, <code>attractmode</code>, aso. Check all supported frontends with '--help' and read a more about the details concerning each of them here.</p> <p>Default value: <code>emulationstation</code> Allowed in sections: <code>[main]</code></p>"},{"location":"CONFIGINI/#emulator","title":"emulator","text":"<p>This option is only applicable when also setting the <code>frontend=\"attractmode\"</code> option. It sets the emulator to be used when generating the <code>attractmode</code> game list. On RetroPie the emulator name is mostly the same as the platform.</p> <p>Default value: unset Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#launch","title":"launch","text":"<p>This option is only applicable when also setting the <code>frontend=\"pegasus\"</code> option. It sets the launch command to be used when generating the <code>pegasus</code> game list. This is optional. It defaults to the RetroPie launch options which works on RetroPie.</p> <p>Default value: unset Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#videos","title":"videos","text":"<p>By default Skyscraper doesn't scrape and cache video resources because of the significant disk space required to save them. You can enable videos using this option.</p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#videosizelimit","title":"videoSizeLimit","text":"<p>If video scraping is enabled you can set the maximum allowed video file size with this variable. The size is in Megabytes (1.000.000 bytes). If this size is exceeded the video file won't be saved to the cache.</p> <p>Default value: <code>100</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#videoconvertcommand","title":"videoConvertCommand","text":"<p>Some scraping modules deliver videos that use a codec or color format that some frontends don't support. In those cases it can be useful to convert the videos before saving them in the Skyscraper resource cache.</p> <p>This setting allows you to set a command that will be run on each video after it has been downloaded from the selected scraping module. See the examples below for inspiration.</p> <p>The <code>%i</code> and <code>%o</code> are required and will be replaced with the internally used video input (original) and output (converted) filenames as needed by Skyscraper.</p> <p>If your command / script always converts to a videofile with a specific extension, you also need to set <code>videoConvertExtension</code>.</p> <p>Tip</p> <p>Set <code>--verbosity 3</code> to route all output from your command / script to the terminal while Skyscraper runs. This will help you ensure everything is working as intended.</p> <p>The first example below makes use of the excellent <code>ffmpeg</code> tool. If you want to use this specific example you need to install <code>ffmpeg</code> first. On RetroPie and other Debian-derived distros you can install it with <code>sudo apt install ffmpeg</code>. If you want to use a script for the video conversion and run it directly without path, you need to place it in the <code>/home/&lt;USER&gt;/.skyscraper</code> folder.</p> <p>Tip</p> <p>If you create a script that includes checks on the input video and it sometimes decides not to convert them, you should simply let the script copy the video with <code>cp %i %o</code>. The <code>%i</code> is a temporary file created internally by Skyscraper. And the <code>%o</code> file is the file used by the cache. Both files should exist after a successful conversion. Skyscraper removes the temporary <code>%i</code> file automatically.</p> <p>Example(s)</p> <pre><code>videoConvertCommand=\"ffmpeg -i %i -y -pix_fmt yuv420p -t 00:00:10 -c:v libx264 -crf 23 -c:a aac -b:a 64k -vf scale=640:480:force_original_aspect_ratio=decrease,pad=640:480:(ow-iw)/2:(oh-ih)/2,setsar=1 %o\"\nvideoConvertCommand=\"videoconvert.sh %i %o\"\n</code></pre> <p>Default value: unset Allowed in sections: <code>[main]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#videoconvertextension","title":"videoConvertExtension","text":"<p>If you want to force an extension for the converted video file created by the <code>videoConvertCommand</code> command, you need to set this option. The converted file will then automatically have this extension no matter what the input file extension is.</p> <p>For instance, if a scraping module delivers the file <code>videofile.avi</code> and you always want the converted files to be <code>mp4</code> files, you simply set this option to <code>videoConvertExtension=\"mp4\"</code>.</p> <p>It is up to you to make sure that the command you provide in <code>videoConvertCommand</code> actually converts to a video file using the selected extension. For some conversion tools such as <code>ffmpeg</code> this is handled simply by setting the extension of the output file. But for other tools you might have to provide additional options to the <code>videoConvertCommand</code> above.</p> <p>Default value: unset Allowed in sections: <code>[main]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#videoprefernormalized","title":"videoPreferNormalized","text":"<p>This option is only applicable when scraping with the <code>-s screenscraper</code> module. ScreenScraper offers two versions of some of their videos. A normalized version, which adheres to some defined standard they made, and the originals. If you prefer converting or standardizing the videos yourself (see <code>videoConvertCommand</code> above) then you can set this to <code>false</code>. If you do so Skyscraper will fetch the original videos from ScreenScraper instead of the normalized ones.</p> <p>Be aware that the original videos often vary a lot in codec, color format and size. So it is recommended to convert them afterwards using the <code>videoConvertCommand</code>.</p> <p>Example(s)</p> <pre><code>[screenscraper]\nvideoPreferNormalized=\"false\"\n</code></pre> <p>Default value: <code>true</code> Allowed in sections: Only for scraper <code>[screenscraper]</code></p>"},{"location":"CONFIGINI/#symlink","title":"symlink","text":"<p>Enabling this option is only relevant while also setting the <code>videos=\"true\"</code> option. It basically means that Skyscraper will create a link to the cached videos instead of copying them when generating the game list media files. This will save a lot of space, but has the caveat that if you somehow remove the videos from the cache, the links will be broken and the videos then won't show anymore.</p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#theinfront","title":"theInFront","text":"<p>Game titles are returned from the scraping sources sometimes as 'The Game' and other times as 'Game, The'. Enabling this option will force Skyscraper to always try and move 'The' to the front of the titles. If it is not enabled, Skyscraper will always try and move it to the end of the title, regardless of how it was originally returned by the scraping sources.</p> <p>Info</p> <p>When generating gamelists Skyscraper will still sort the games as if the game titles didn't have 'The' at the beginning.</p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#brackets","title":"brackets","text":"<p>Disable this option to remove any bracket notes when generating the game list. It will disable notes such as <code>(Europe)</code> and <code>[AGA]</code> completely. This option is only relevant when generating the game list. It makes no difference when gathering data into the resource cache.</p> <p>Default value: <code>true</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#maxlength","title":"maxLength","text":"<p>Sets the maximum length of returned game descriptions. This is a convenience option if you feel like game descriptions are too long. By default it is set to 2500.</p> <p>Default value: <code>2500</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#minmatch","title":"minMatch","text":"<p>Some scraping modules are based on a file name or title based search. This option sets the minimum percentage any returned results need to match with in order for it to be accepted. For instance, the game <code>Wonderboy in Monsterland</code> might return the title <code>Wonder Boy in Monster Land</code> which is clearly a match. But it's not a 100% match. So it needs to be set relatively high, while still ignoring bad matches. By default it is set to 65 which has been tested to be a good middle-ground.</p> <p>Default value: <code>65</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#threads","title":"threads","text":"<p>Sets the desired number of parallel threads to be run when scraping. Some modules have maximum allowed threads. If you set this higher than the allowed value, it will be auto-adjusted. By default it is set to 4.</p> <p>Default value: <code>4</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#pretend","title":"pretend","text":"<p>This option is only relevant when generating a game list (by leaving out the <code>-s &lt;SCRAPER&gt;</code> command line option). It disables the game list generator and artwork compositor and only outputs the results of the potential game list generation to the terminal. It is mostly useful when used as a command line flag with <code>--flags pretend</code>. It makes little sense to set it here, but you can if you want to.</p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p>"},{"location":"CONFIGINI/#unattend","title":"unattend","text":"<p>When generating a game list Skyscraper will check if it already exists and ask if you want to overwrite it. And it will also ask if you wish to skip existing game list entries. By enabling this option Skyscraper will always overwrite an existing game list and never skip existing entries, in other words: the game list will be newly created. This is useful when scripting Skyscraper to avoid the need for user input.</p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#unattendskip","title":"unattendSkip","text":"<p>When generating a game list Skyscraper will check if it already exists and ask if you want to overwrite it. And it will also ask if you wish to skip existing game list entries. By enabling this option Skyscraper will always overwrite an existing game list and always skip existing entries, in other words: game list entries are added if not present in the gamelist, existing entries are left untouched. This is useful when scripting Skyscraper to avoid the need for user input.</p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#interactive","title":"interactive","text":"<p>When gathering data from any of the scraping modules many potential entries will be returned. Normally Skyscraper chooses the best entry for you. But should you wish to choose the best entry yourself, you can enable this option. Skyscraper will then list the returned entries and let you choose which one is the best one. It is recommended to use the command line flag <code>--flags interactive</code> instead in the (hopefully) rare cases where this mode is necessary.</p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#forcefilename","title":"forceFilename","text":"<p>Enable this option to force Skyscraper to use the file name (excluding extension) instead of the cached scraping module titles when generating a game list.</p> <p>Tip</p> <p>If you set <code>forceFilename=\"true\"</code> and your filenames contain bracket notes such as <code>(this)</code> or <code>[that]</code> at the end, these will be combined with whatever bracket notes are at the end of the titles returned from the sources. This can cause some confusion. For instance, if you have the filename <code>Gran Turismo 2 (USA) (Arcade Mode)</code> and the cached title is <code>Gran Turismo 2 (Arcade Mode)</code>, then the gamelist name will become <code>Gran Turismo 2 (Arcade Mode)(USA)(Arcade Mode)</code>. You can disable them altogether with the <code>brackets=\"no\"</code> option.</p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#verbosity","title":"verbosity","text":"<p>Sets how verbose Skyscraper should be when running. Default level is 0. The higher the value, the more info Skyscraper will output to the terminal while running.</p> <p>Default value: <code>0</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#skipped","title":"skipped","text":"<p>If a rom has no resources attached to it in the cache, it will be left out when generating a game list file. It will still show up in the frontend (at least it does for EmulationStation) but it won't exist in the game list file. You can safely leave out / disable this option unless you need the empty entries for some reason.</p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#maxfails","title":"maxFails","text":"<p>Not all scraping modules support all platforms. This means that you can potentially start a scraping run with a module and a platform that is incompatible. This will hammer the servers for potentially hundreds of roms but provide 0 results for any of them. To avoid this Skyscraper has a builtin limit for initially allowed failed rom lookups. If this is reached it will quit. Setting this option allows you to set this limit yourself, but not above a maximum of 200. The default limit is 42. Don't change this unless you have a very good reason to do so.</p> <p>Default value: <code>42</code> Allowed in sections: <code>[main]</code></p>"},{"location":"CONFIGINI/#region","title":"region","text":"<p>Adds the specified region to the top of the existing default internal region priority list. Only one region is supported with this configuration. To overwrite the internal default region priority list entirely check here. Read more about how regions are handled in general here.</p> <p>Info</p> <p>Setting the region will overwrite any region auto-detected from the file name.</p> <p>Default value: unset Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p> <p>Example(s)</p> <pre><code>[main]\nregion=\"de\"\n</code></pre> <p>or</p> <pre><code>[snes]\nregion=\"de\"\n</code></pre>"},{"location":"CONFIGINI/#regionprios","title":"regionPrios","text":"<p>Completely overwrites the internal region priority list inside of Skyscraper. Multiple regions can be configured here separated by commas. Read more about how regions are handled in general here.</p> <p>Info</p> <p>Any region auto-detected from the file name will still be added to the top of this list.</p> <p>Default value: <code>eu, us, ss, uk, wor, jp, au, ame, de, cus, cn, kr, asi, br, sp, fr, gr, it, no, dk, nz, nl, pl, ru, se, tw, ca</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p> <p>Example(s)</p> <pre><code>[main]\nregionPrios=\"de,us,jp\"\n</code></pre> <p>or</p> <pre><code>[megadrive]\nregionPrios=\"de,us,jp\"\n</code></pre>"},{"location":"CONFIGINI/#lang","title":"lang","text":"<p>Adds the specified language to the top of the existing default internal language priority list. Only one language is supported with this configuration. Read more about how languages are handles in general here.</p> <p>Default value: unset Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p> <p>Example(s)</p> <pre><code>[main]\nlang=\"it\"\n</code></pre> <p>or</p> <pre><code>[snes]\nlang=\"it\"\n</code></pre>"},{"location":"CONFIGINI/#langprios","title":"langPrios","text":"<p>Completely overwrites the internal language priority list inside of Skyscraper. Multiple languages can be configured here separated by commas. Read more about how languages are handles in general here.</p> <p>Default value: <code>en, de, fr, es</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p> <p>Example(s)</p> <pre><code>[main]\nlangPrios=\"it,en\"\n</code></pre> <p>or</p> <pre><code>[megadrive]\nlangPrios=\"it,en\"\n</code></pre>"},{"location":"CONFIGINI/#artworkxml","title":"artworkXml","text":"<p>Sets a non-default xml file to use when setting up the artwork compositing. By default Skyscraper uses the file <code>/home/&lt;USER&gt;/.skyscraper/artwork.xml</code>. Read more about the artwork.xml format and customization options here.</p> <p>Tip</p> <p>It can be very useful to set this in any platform section or frontend section where you want a specific artwork setup / look.</p> <p>Default value: <code>artwork.xml</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#relativepaths","title":"relativePaths","text":"<p>Enabling this forces the rom and any media paths inside the game list to be relative to the rom input folder. Currently only relevant when generating an EmulationStation, a Retrobat or a Pegasus game list (see also frontend option).</p> <p>Info</p> <p>This setting has no effect when the frontend is set to attractmode.</p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p>"},{"location":"CONFIGINI/#extensions","title":"extensions","text":"<p>Completely overwrites the rom extensions Skyscraper allows for the chosen platform. Use a space between each extension (e.g., <code>*.abc *.def</code>).</p> <p>Info</p> <p>If you feel like you are using a file extension that ought to be supported by default, please report it so it can be added in a later version of Skyscraper.</p> <p>Default value: unset. If set it ignores <code>\"formats\": [ ... ]</code> in <code>peas.json</code> file Allowed in sections: <code>[&lt;PLATFORM&gt;]</code></p>"},{"location":"CONFIGINI/#addextensions","title":"addExtensions","text":"<p>Adds the rom extensions to the ones that are already supported by the platform, use a space between each extension.</p> <p>Info</p> <p>If you feel like you are using a file extension that ought to be supported by default, please report it so it can be added in a later version of Skyscraper.</p> <p>Default value: <code>*.zip *.7z *.ml</code> (if and only if <code>extensions</code> parameter is unset) Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p>"},{"location":"CONFIGINI/#hints","title":"hints","text":"<p>If set to false it disables the \"Did you know\" hints when running Skyscraper.</p> <p>Default value: <code>true</code> Allowed in sections: <code>[main]</code></p>"},{"location":"CONFIGINI/#subdirs","title":"subdirs","text":"<p>By default Skyscraper will include roms located in subfolders. By disabling this option Skyscraper will only scrape the roms located directly in the input folder. See <code>inputFolder=\"&lt;PATH&gt;\"</code> further up to read more about the rom input folder.</p> <p>Default value: <code>true</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p>"},{"location":"CONFIGINI/#startat","title":"startAt","text":"<p>If you only ever wish to gather data for a subset of your roms from the scraping modules you can use this option to set the starting rom. It will then scrape alphabetically from that rom and onwards.</p> <p>Tip</p> <p>Please consider using the command line option <code>--startat &lt;FILENAME&gt;</code> instead. It makes little sense to set this permanently in your configuration unless you always want it to only ever scrape from a certain file and onward. But you can if you absolutely want to.</p> <p>Default value: unset Allowed in sections: <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#endat","title":"endAt","text":"<p>If you only ever wish to gather data for a subset of your roms from the scraping modules you can use this option to set the rom to end at. It will then scrape alphabetically until it reaches this rom, then stop.</p> <p>Tip</p> <p>Please consider using the command line option <code>--endat &lt;FILENAME&gt;</code> instead. It makes little sense to set this permanently in your configuration unless you always want it to only ever scrape up until it reaches a certain file. But you can if you absolutely want to.</p> <p>Default value: unset Allowed in sections: <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#includepattern","title":"includePattern","text":"<p>Per platform Skyscraper have default file extensions that it will accept. This option allows you to only include certain files within that scope. The pattern is a simple asterisk type pattern. In cases where you need to match for a comma you need to escape it as <code>\\,</code>.</p> <p>Note</p> <p>You might also want to check out the file extension options and the the 'includeFrom' option.</p> <p>Default value: unset Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#excludepattern","title":"excludePattern","text":"<p>Per platform Skyscraper have default file extensions that it will accept. This option allows you to exclude certain files within that scope. The pattern is a simple asterisk type pattern. In cases where you need to match for a comma you need to escape it as <code>\\,</code>.</p> <p>Note</p> <p>You might also want to check out the file extension options and the 'excludeFrom' option.</p> <p>Tip</p> <p>If you create a file named <code>.skyscraperignore</code> within any subfolder of the input dir, all files from that directory will be ignored by Skyscraper. Additionally, if you put an empty file <code>.skyscraperignoretree</code> in a folder, all files in that directory and all subdirectories are ignored.</p> <p>Default value: unset Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#includefrom","title":"includeFrom","text":"<p>Tells Skyscraper to only include the files listed in FILENAME. One filename per line (with FULL path, eg. '/home/pi/RetroPie/roms/snes/subdir/somefile.zip').</p> <p>This file can be generated with the '--cache report:missing' option or made manually.</p> <p>Note</p> <p>You might also want to check out the 'includePattern' option.</p> <p>Default value: unset Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p>"},{"location":"CONFIGINI/#excludefrom","title":"excludeFrom","text":"<p>Tells Skyscraper to exclude the files listed in FILENAME. One filename per line (with FULL path, eg. '/home/pi/RetroPie/roms/snes/subdir/somefile.zip').</p> <p>This file can be generated with the '--cache report:missing' option or made manually.</p> <p>Note</p> <p>You might also want to check out the 'excludePattern' option.</p> <p>Tip</p> <p>If you create a file named '.skyscraperignore' within any subfolder of the input dir, all files from that directory will be ignored by Skyscraper. Additionally, if you put an empty file <code>.skyscraperignoretree</code> in a folder, all files in that directory and all subdirectories are ignored.</p> <p>Default value: unset Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p>"},{"location":"CONFIGINI/#usercreds","title":"userCreds","text":"<p>Some scraping modules require a <code>key</code> or <code>user:password</code> to work. You can create a <code>[&lt;SCRAPER&gt;]</code> section and add a <code>userCreds=\"user:pass\"</code> or <code>userCreds=\"key\"</code> line beneath it. Doing this will always use these credentials when scraping from the module in question. Check the scraping module overview to see the specific requirements for each module here.</p> <p>Example(s)</p> <pre><code>[screenscraper]\nuserCreds=\"user:password\"\n</code></pre> <p>or</p> <pre><code>[igdb]\nuserCreds=\"key\"\n</code></pre> <p>Default value: unset Allowed in sections: <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#spacecheck","title":"spaceCheck","text":"<p>Skyscraper will continuously check if you are running low on disk space. If you go below 200 MB in either the game list export folder or the resource cache folder, it will quit to make sure your system doesn't become unstable. Some types of file systems provide a faulty result to Skyscraper when it comes to these checks and thus it can be necessary to disable it altogether. You can use this option to do just that.</p> <p>Default value: <code>true</code> Allowed in sections: <code>[main]</code></p>"},{"location":"CONFIGINI/#scummini","title":"scummIni","text":"<p>Allows you to set a non-default path of the <code>scummvm.ini</code> file. This file is used whenever scraping the <code>scummvm</code> platform. It converts the shortname such as <code>monkey2</code> to the more search-friendly name <code>Monkey Island 2: LeChuck's Revenge</code> whenever using one of the file name search based scraping modules.</p> <p>Default value: If <code>~/.scummvmrc</code> has precedence over <code>/opt/retropie/configs/scummvm/scummvm.ini</code> Allowed in sections: <code>[main]</code></p>"},{"location":"CONFIGINI/#platform","title":"platform","text":"<p>Allows you to set a platform, which is applied when no command line switch <code>-p</code> is given.</p> <p>Default value: unset Allowed in sections: <code>[main]</code></p>"},{"location":"FAQ/","title":"FAQ","text":""},{"location":"FAQ/#the-official-skyscraper-frequently-asked-questions","title":"The official Skyscraper Frequently Asked Questions","text":"<p>A quick note before I let you loose on the questions:</p> <ul> <li>You can get a list of all available command-line options by running <code>Skyscraper --help</code></li> <li>For a more thorough description of the command-line options go here</li> <li>You can read all about the available <code>config.ini</code> options here</li> <li>If you are using Skyscraper with RetroPie search their forum or raise a question there if you are puzzled</li> </ul> <p>And now for the questions (with answers)...</p> I ran Skyscraper and it scraped a lot of artwork and game data, but no data is showing up in my gamelists. What's going on? <p>You probably forgot to generate the gamelist. Skyscraper has two modes; resource gathering mode and gamelist generation mode. First you gather data into Skyscraper's resource cache by scraping the platform with any of the supported scraping modules (eg. <code>Skyscraper -p snes -s thegamesdb</code>). When you feel like you have gathered all the resources that you need, you then generate the gamelist by simply leaving out the <code>-s &lt;MODULE&gt;</code> option (eg. <code>Skyscraper -p snes</code>). Read more about the resource cache here.</p> Skyscraper keeps quitting on me with errors about request limits or similar. What's going on? <p>Almost all of the scraping modules, such as ScreenScraper and TheGamesDb, have restrictions applied to avoid users overloading their servers. These restrictions are set by them, not Skyscraper. Some modules even require you to log in to use them. Read more about the restrictions and how to deal with them here. If you've created a user at ScreenScraper and want to use your credentials with Skyscraper, just add the following section to <code>/home/&lt;USER&gt;/.skyscraper/config.ini</code>. Type it exactly like this, but with your own user and pass. <pre><code>[screenscraper]\nuserCreds=\"USER:PASS\"\n</code></pre></p> Skyscraper by default generates a composited screenshot that combines both boxart, screenshot and wheel. I just want it to export the raw artwork, how do I do that? <p>Skyscraper includes a powerful artwork compositor you can set up any way you like. Read more about the possibilities here. If you just want it to export the raw unmodified screenshot and other pieces of artwork, you can use the <code>/home/&lt;USER&gt;/.skyscraper/artwork.xml.example2</code> and copy it to <code>/home/&lt;USER&gt;/.skyscraper/artwork.xml</code>. Remember to regenerate the gamelists after you've done this to make use of the new artwork configuration. This can be done simply by running Skyscraper with <code>Skyscraper -p PLATFORM</code>. This will regenerate the gamelist for that platform using this new artwork configuration.</p> I've edited the artwork.xml or some other part of Skyscraper's gamelist specific configurations, but the games still show up the same inside my frontend. Why is that? <p>Whenever you make any gamelist specific changes to Skyscraper's configurations, you need to regenerate the gamelists for your chosen frontend afterwards for the changes to take effect. This can be done simply by running Skyscraper with <code>Skyscraper -p PLATFORM</code>. This will regenerate the gamelist for that platform for the default EmulationStation frontend using your new configuration. If you wish to export for one of the other supported frontends, you need to specify this. Read more about the frontends and their requirements here.</p> I used Skyscraper to generate EmulationStation gamelists for one or more platforms, but when I restarted the system the gamelist hadn't changed. Why is that? <p>Did you remember to quit EmulationStation before running Skyscraper? EmulationStation writes its current gamelists back to disk when it is closed. If you run Skyscraper while EmulationStation is also running, it will overwrite any gamelists you just generated. You need to quit EmulationStation before generating the gamelists with Skyscraper to avoid this. You can quit EmulationStation by pressing F4 on a connected keyboard, or by selecting quit from the menus.</p> I installed Skyscraper from the RetroPie optional packages and want to run it from the terminal. But when I type <code>Skyscraper</code> it says <code>Skyscraper: command not found</code>. Why is that? <p>The RetroPie-Setup script installs the Skyscraper executable in a non-default location that is not searched by the OS. You can fix this by creating a symbolic link to the executable in a location that the OS is aware of by running <code>sudo ln -s /opt/retropie/supplementary/skyscraper/Skyscraper /usr/local/bin/Skyscraper</code>. You might be asked for your sudo password, for RetroPie default is <code>raspberry</code>. If that command was succesful you should now be able to run Skyscraper simply with <code>Skyscraper</code> followed by any options you need.</p> <p>Warning</p> <p>Some people tend to run Skyscraper with <code>sudo Skyscraper ...</code>. Do not do this! <code>sudo</code> is not needed for running Skyscraper and will mess up your file permissions.</p> I want to set up different options for different platforms. It's really tiresome setting it all on command-line. Can this be done easier? <p>YES! Absolutely. In addition to taking options from the command-line, Skyscraper also reads the <code>/home/&lt;USER&gt;/.skyscraper/config.ini</code> file, which is where you should set everything up. This file allows you to configure things both globally, per-platform, per-frontend and per-scraping module. Read more about the available options and option priorities here.</p> When I try to scrape data or generate gamelists I get all sorts of write permission errors and missing configurations. What's going on? <p>You are probably running, or at some point ran, Skyscraper with <code>sudo Skyscraper</code> instead of just <code>Skyscraper</code>. Doing so will result in all sorts of weird behaviour as Skyscraper was then run as the <code>root</code> user instead of the ordinary user. Depending on what command-line parameters you ran Skyscraper with, this will have caused permission issues for your files in <code>/home/&lt;USER&gt;/RetroPie/roms</code> subfolders and might also have caused permission issues with the <code>/home/&lt;USER&gt;/.skyscraper</code> folder. This is a common problem for new Linux users who are used to working with Windows. In Linux you rarely need Administrator privileges. Running a command with <code>sudo</code> in front of it will run it as the root / Administrator user. And any folders or files being generated while that command runs, will then be owned by root. When you run software as the normal user afterwards and it tries to write to those folders or files, it will fail. You need to reset those permissions back to be owned by your ordinary user. If you are running RetroPie, the following commands might fix your problem (RUN AT YOUR OWN RISK!): <pre><code>$ sudo chown -R pi:pi /home/pi/.skyscraper\n$ sudo chown -R pi:pi /home/pi/RetroPie/roms\n</code></pre> The above commands must be run with <code>sudo</code>, as we need root permission to reset the folders and files (hence the warning). But in general, never run anything with <code>sudo</code> unless you are specifically told to do so.</p> I generated a game list for the Pegasus frontend. When I fire up Pegasus the data is there, but it doesn't look very good. Why is that? <p>Skyscraper contains a powerful artwork compositor that can customize the exported screenshot, boxart etc. any way you like. This is done through the <code>/home/&lt;USER&gt;/.skyscraper/artwork.xml</code> file. The default configuration for this file is made to look good when exporting for the default frontend EmulationStation. When you use a different frontend, you need to customize this file a bit to make it look good. For Pegasus I suggest something like this: <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;artwork&gt;\n  &lt;output type=\"screenshot\" width=\"640\"/&gt;\n  &lt;output type=\"cover\" width=\"640\" height=\"480\"&gt;\n    &lt;layer resource=\"cover\" height=\"480\" align=\"center\" valign=\"middle\"&gt;\n      &lt;gamebox side=\"wheel\" rotate=\"90\"/&gt;\n    &lt;/layer&gt;\n  &lt;/output&gt;\n  &lt;output type=\"wheel\" height=\"200\"/&gt;\n&lt;/artwork&gt;\n</code></pre> Read more about how to set up a custom <code>artwork.xml</code> here.</p> I've changed my <code>artwork.xml</code> configuration and regenerated the game list, but it still looks the same in the frontend. Why is that? <p>Did you perhaps edit <code>/home/&lt;USER&gt;/skysource/artwork.xml</code> instead of <code>/home/&lt;USER&gt;/.skyscraper/artwork.xml</code>? The latter is the one you need to edit. Read more about how to set up a custom <code>artwork.xml</code> here.</p>"},{"location":"FRONTENDS/","title":"Frontends","text":""},{"location":"FRONTENDS/#overview","title":"Overview","text":"<p>When generating a game list with Skyscraper you have the option of generating it for several different frontends. A frontend is the graphical interface that lists and launches your games.</p> <p>Setting a frontend when generating a game list is done by setting the <code>-f &lt;FRONTEND&gt;</code> command-line parameter as explained here or by setting it in <code>/home/&lt;USER&gt;/.skyscraper/config.ini</code> as explained here. Use for the <code>&lt;FRONTEND&gt;</code> value the frontend name all lowercase and with alphabetical characters only: <code>emulationstation</code>, <code>pegasus</code>, <code>retrobat</code>, <code>attractmode</code>. Some frontends have further options that are either optional or required. Check the frontend sections below for more information on this.</p> <p>Warning</p> <p>Skyscraper will overwrite your game list (obviously). So if you have spend a lot of time hand-crafting metadata in a game list for any frontend, please remember to create a backup before overwriting it with Skyscraper. You can also tell Skyscraper to auto-backup old game lists prior to overwriting them. Read more about that here.</p> <p>When generating a game list for any frontend, Skyscraper will try to preserve certain metadata. Check the frontend sections below for more information on what metadata is preserved per frontend.</p>"},{"location":"FRONTENDS/#emulationstation-default","title":"EmulationStation (default)","text":"<ul> <li>Default game list location: <code>/home/pi/&lt;USER&gt;/RetroPie/roms/&lt;PLATFORM&gt;</code></li> <li>Default game list filename: <code>gamelist.xml</code></li> </ul> <p>This is the default frontend used when generating a game list with Skyscraper. If no frontend is defined on command-line or in <code>config.ini</code> it will fall back to generating for EmulationStation.</p>"},{"location":"FRONTENDS/#metadata-preservation","title":"Metadata preservation","text":"<p>Skyscraper will preserve the following metadata when re-generating a game list for EmulationStation: <code>favorite</code>, <code>hidden</code>, <code>kidgame</code>, <code>lastplayed</code>, <code>playcount</code>, <code>sortname</code>.</p>"},{"location":"FRONTENDS/#retrobat","title":"RetroBat","text":"<ul> <li>Default game list location: <code>/home/pi/&lt;USER&gt;/RetroPie/roms/&lt;PLATFORM&gt;</code></li> <li>Default game list filename: <code>gamelist.xml</code></li> </ul> <p>This is modeled after EmualtionStation as it uses it with slight differences.</p>"},{"location":"FRONTENDS/#attract-mode","title":"Attract-Mode","text":"<ul> <li>Default game list location: <code>/home/pi/&lt;USER&gt;/.attract/romlists</code></li> <li>Default game list filename: <code>&lt;EMULATOR/PLATFORM&gt;.txt</code></li> </ul> <p>Attract-Mode is a bit more abstract when it comes to how it saves its game lists and media. To export for Attract-Mode you need to, in addition to setting the frontend, set <code>-e &lt;EMULATOR&gt;</code> on command-line or in <code>config.ini</code>. The <code>&lt;EMULATOR&gt;</code> is a file that describes the platform / emulator you are generating a game list for. The file contains everything needed to tell Attract-Mode how to launch games for the platform, and even where to find the media files for the games (such as screenshots and videos).</p> <p>If you are running RetroPie most of the <code>&lt;EMULATOR&gt;</code> files will have been auto-generated for you. They are usually named the same as the platform you are generating a game list for. So, if you are generating for <code>snes</code> you simply use <code>Skyscraper -p snes -f attractmode -e snes</code> and that should work just fine. The <code>&lt;EMULATOR&gt;</code> files are usually located at <code>/home/&lt;USER&gt;/.attract/emulators/</code>. Check them out if you are curious.</p>"},{"location":"FRONTENDS/#metadata-preservation_1","title":"Metadata preservation","text":"<p>Skyscraper will preserve the following metadata when re-generating a game list for Attract-Mode: <code>altromname</code>, <code>alttitle</code>, <code>buttons</code>, <code>cloneof</code>, <code>control</code>, <code>displaycount</code>, <code>displaytype</code>, <code>extra</code>, <code>rotation</code>, <code>status</code>.</p>"},{"location":"FRONTENDS/#pegasus","title":"Pegasus","text":"<ul> <li>Default game list location: <code>/home/pi/&lt;USER&gt;/RetroPie/roms/&lt;PLATFORM&gt;</code></li> <li>Default game list filename: <code>metadata.pegasus.txt</code></li> </ul> <p>Pegasus is easy and simple to generate a game list for. Simply do <code>Skyscraper -p &lt;PLATFORM&gt; -f pegasus</code>. If you want to specify a custom launch command (if you are using RetroPie you don't have to, a default one will be used), you can set it on command-line with <code>-e \"&lt;COMMAND&gt;\"</code> or in <code>config.ini</code> with:</p> <pre><code>[pegasus]\nlaunch=\"&lt;COMMAND&gt;\"\n</code></pre> <p>You need to add the individual platform rom directories to Pegasus (if they are not already defined) before any of them will show up! Start the Pegasus frontend, press ESC on the keyboard and choose Settings -&gt; Set game directories. Simply point it to each individual platform sub-directory. For RetroPie you should have a path for each platform (eg. <code>/home/&lt;USER&gt;/RetroPie/roms/snes</code>, <code>/home/&lt;USER&gt;/RetroPie/roms/megadrive</code> etc.).</p> <p>Info</p> <p>If you are generating game lists for Pegasus, it is highly recommended to disable third-party game list data sources! Otherwise you will have a mish-mash or different sources showing up in Pegasus. Start the Pegasus frontend, press ESC on the keyboard and choose Settings -&gt; Enable/disable data sources and disable everything in that submenu. Then reload the game lists or restart Pegasus, and all of the platforms should show up with media and game information generated by Skyscraper.</p>"},{"location":"FRONTENDS/#metadata-preservation_2","title":"Metadata preservation","text":"<p>Skyscraper will preserve any metadata key-value pairs added to the header and / or individual game list entries.</p>"},{"location":"IMPORT/","title":"Import of Game Data","text":""},{"location":"IMPORT/#custom-data-import","title":"Custom Data Import","text":"<p>The following describes how to import your own custom textual, artwork and / or video data into the resource cache for later use when generating game lists (enable game list generation mode simply by leaving out the <code>-s</code> command line option).</p> <p>Tip</p> <p>For any path in the following description, you can also add a platform subfolder. Skyscraper will auto-detect this and use it instead of the base import folder. For instance, you can create the folder <code>/home/&lt;USER&gt;/.skyscraper/import/amiga</code> and it will use that as base instead of <code>/home/&lt;USER&gt;/.skyscraper/import/</code> when importing for the <code>amiga</code> platform.</p> <p>Info</p> <p>Be sure to also check the <code>--cache edit</code> option here.</p>"},{"location":"IMPORT/#images-and-videos","title":"Images and Videos","text":"<p>To import videos or images into the resource cache, use the following procedure:</p> <ul> <li>Name your image or video file with the exact base name of the rom you wish to connect it to. Example: <code>Bubble Bobble.nes</code> will import images with a filename of <code>Bubble Bobble.jpg</code> or <code>Bubble Bobble.png</code> or other well-known image formats. As long as the base name is an exact match. Same goes for video files. I recommend only making use of well-known video formats since Skyscraper imports them directly without conversion (unless you convert them as described here), so they need to be supported directly by the frontend you plan to use.</li> <li>Place all of your images or videos in the <code>/home/&lt;USER&gt;/.skyscraper/import/screenshots</code>, <code>covers</code>, <code>wheels</code>, <code>marquees</code> or <code>videos</code> folders.</li> <li>Now run Skyscraper with <code>Skyscraper -p &lt;PLATFORM&gt; -s import</code>. If you named your files correctly, they will now be imported. Look for the green 'YES' in the output at the rom(s) you've placed files for. This will tell you if it succeeded or not.</li> <li>The data is now imported into the resource cache. To make use of if read here.</li> </ul>"},{"location":"IMPORT/#special-note-for-videos","title":"Special Note for Videos","text":"<p>If you are importing videos, you also need to add the command line flag <code>--flags videos</code> for this to work. Videos aren't imported or scraped by default, since it is considered a huge disk space hog. So keep this in mind if you want to import videos into the cache. If you plan on always using videos, consider adding this option to the config.ini instead.</p>"},{"location":"IMPORT/#textual-data-publisher-players-rating","title":"Textual Data (Publisher, Players, Rating, ...)","text":"<p>Skyscraper also allows you to import textual data for any rom you have in your collection. All you need to do is to prepare files for each rom with an exactly matching base name. For instance <code>Bubble Bobble.nes</code> should have a file called <code>Bubble Bobble.txt</code> or <code>Bubble Bobble.xml</code> or whatever suffix you want to use. The suffix is not important. What is important is that you place all of these raw data files into the <code>/home/&lt;USER&gt;/.skyscraper/import/textual</code> folder. And then you need to make a definitions file so Skyscraper has a recipe for these files.</p>"},{"location":"IMPORT/#textual-data-definitions-file","title":"Textual data definitions file","text":"<p>In order for Skyscraper to understand your textual data files, it needs a recipe. Or a definition of your format if you like. The format is completely up to you. The file must be placed at <code>/home/&lt;USER&gt;/.skyscraper/import/definitions.dat</code>. Here follows a few examples with a matching data file for comparison:</p> <p>Example 1</p> <p>Definitions file: <code>/home/&lt;USER&gt;/.skyscraper/import/definitions.dat</code></p> <pre><code>&lt;game&gt;\n  &lt;title&gt;###TITLE###&lt;/title&gt;\n  &lt;description&gt;###DESCRIPTION###&lt;/description&gt;\n  &lt;developer&gt;###DEVELOPER###&lt;/developer&gt;\n  &lt;publisher&gt;###PUBLISHER###&lt;/publisher&gt;\n  &lt;players&gt;###PLAYERS###&lt;/players&gt;\n  &lt;rating&gt;###RATING###&lt;/rating&gt;\n  &lt;ages&gt;###AGES###&lt;/ages&gt;\n  &lt;genre&gt;###TAGS###&lt;/genre&gt;\n  &lt;releasedate&gt;###RELEASEDATE###&lt;/releasedate&gt;\n&lt;/game&gt;\n</code></pre> <p>Import file: <code>/home/&lt;USER&gt;/.skyscraper/import/textual/&lt;EXACT ROM BASE NAME&gt;.xml</code></p> <pre><code>&lt;game&gt;\n  &lt;title&gt;The Game Title&lt;/title&gt;\n  &lt;description&gt;This game is about yada, yada yada.&lt;/description&gt;\n  &lt;developer&gt;The game developer&lt;/developer&gt;\n  &lt;publisher&gt;The game publisher&lt;/publisher&gt;\n  &lt;players&gt;Maximum number of players supported (example '4')&lt;/players&gt;\n  &lt;rating&gt;The game rating 0-5 (example '3.5')&lt;/rating&gt;\n  &lt;ages&gt;Minimum age restriction as integer (example '16')&lt;/ages&gt;\n  &lt;genre&gt;Genres, Comma-separated&lt;/genre&gt;\n  &lt;releasedate&gt;The game release date (example '1985-06-01')&lt;/releasedate&gt;\n&lt;/game&gt;\n</code></pre> <p>Tip</p> <p>As with Skyscraper 3.9.2 onwards you are no longer required to have the same indention or whitespace (hard tabs, spaces) as in the XML-like <code>definitions.dat</code>. Matching is solely done via XML elements (e.g. <code>&lt;title&gt;</code>), which saves you headache in identifiying whitespace mismatch between the XML template and your XML import file. If you use a custom XML-like <code>definitions.dat</code>: Keep the opening and closing XML element on one line and use one line per <code>###tag###</code> as in the example definition shown above. This is the default in the provided <code>definitions.dat</code>. In your import file just assure to use also closing elements (<code>&lt;/title&gt;</code>) and the same caSiNg in the elements between template and import file, ie. provide a valid XML file.</p> <p>Example 2</p> <p>Definitions file: <code>/home/&lt;USER&gt;/.skyscraper/import/definitions.dat</code></p> <pre><code>Title      : ###TITLE###\nDescription: ###DESCRIPTION###\nDeveloper  : ###DEVELOPER###\nPublisher  : ###PUBLISHER###\nPlayers    : ###PLAYERS###\nRating     : ###RATING###\nRating     : ###AGES###\nGenre      : ###TAGS###\nDate       : ###RELEASEDATE###\n</code></pre> <p>Import file: <code>/home/&lt;USER&gt;/.skyscraper/import/textual/&lt;EXACT ROM BASE NAME&gt;.txt</code></p> <pre><code>Title      : Game Title\nDescription: This game is about yada, yada yada.\nDeveloper  : The game developer\nPublisher  : The game publisher\nPlayers    : Maximum number of players supported (example '4')\nRating     : The game rating 0-5 (example '3.5')\nAges       : Minimum age restriction as integer (example '16')\nGenre      : Genres, Comma-separated\nDate       : The game release date (example '1985-06-01')\n</code></pre> <p>Warning</p> <p>Make sure any line matches exactly with the line in the recipe including white-space characters such as newline characters, spaces and tabs! Otherwise Skyscraper won't recognize it. Especially for newline characters this can be difficult to debug. Newline characters appear the same in an editor so you won't notice the problem until you load it up in a hex editor.</p>"},{"location":"IMPORT/#list-of-known-tags","title":"List of known tags","text":"<p>From the examples above you'll notice the <code>###SOMETHING###</code> tags. This is what Skyscraper recognizes your data from. The supported tags are:</p> <ul> <li><code>###TITLE###</code></li> <li><code>###DESCRIPTION###</code></li> <li><code>###DEVELOPER###</code></li> <li><code>###PUBLISHER###</code></li> <li><code>###PLAYERS###</code></li> <li><code>###AGES###</code></li> <li><code>###RATING###</code></li> <li><code>###TAGS###</code></li> <li><code>###RELEASEDATE###</code></li> </ul>"},{"location":"IMPORT/#resource-formats","title":"Resource formats","text":"<p>For <code>###PLAYERS###</code>, <code>###AGES###</code>, <code>###RELEASEDATE###</code> and <code>###RATING###</code> a certain format is required.</p> <ul> <li>Players must contain just the maximum number of players as an integer such as '4'.</li> <li>Ages must be an integer between 1 and 18 (for instance \"16\" means it is suitable from ages 16 and up).</li> <li> <p>Release date must be of one of the following formats:</p> <ul> <li><code>yyyy</code></li> <li><code>yyyy-MM</code></li> <li><code>yyyy-MM-dd</code> (full ISO 8601 date)</li> <li><code>yyyy-MMM-dd</code> (MMM is Jan, Feb and so on...)</li> <li><code>MM/dd/yyyy</code></li> <li><code>MMM, yyyy</code> (MMM is Jan, Feb and so on...)</li> <li><code>MMM dd, yyyy</code> (MMM is Jan, Feb and so on...)</li> </ul> </li> <li> <p>Rating can be either a number between 0 and 5, use as fraction only .5. Examples: 3 or 4.5 but not 4.25 or 1.0. This value will be divided by five to match the scale of the rating in a Gamelist. Additionally, a value between 0.0 and 1.0 can be used. This value will not be recalculated. If you want to use 0.5 in this metric, provide it as .5 (note the missing zero). Do add a fraction of zero explicitly to denote a rating of 1.0 (100%), without this trailing fraction it will be interpreted as if it would be in the range of 0 to 5 (thus 20% for 1).</p> </li> </ul>"},{"location":"IMPORT/#how-to-actually-use-the-data","title":"How to actually use the data?","text":"<p>When you've imported all of your data into the resource cache, you can make use of it by enabling Skyscrapers game list generation mode simply by leaving out the <code>-s</code> command line option (eg. <code>Skyscraper -p &lt;PLATFORM&gt;</code>). The game list generator will then make use of your imported data. If you don't know what the resource cache is, read more about it here.</p>"},{"location":"LANGUAGES/","title":"Languages","text":""},{"location":"LANGUAGES/#overview","title":"Overview","text":"<p>Some game information comes in several languages. Skyscraper provides several ways of configuring these for your convenience. It is important to understand the distinction between game region and language. Setting a language is a user-preferred thing and will only affect the game descriptions and tags (genres). The remaining game data is tied to the region instead (artwork (screenshots, marquees, ...) and, in some cases, the game name).</p>"},{"location":"LANGUAGES/#scraping-modules-that-support-languages","title":"Scraping Modules that Support Languages","text":"<ul> <li>screenscraper (game description and tags / genres)</li> </ul> <p>Below follows a general list of supported languages. Please note that not all languages are supported by all modules (support is noted inside the parenthesis for each language).</p> <p>When configuring languages be sure to use the short-names as shown (eg. 'no' for Norwegian).</p>"},{"location":"LANGUAGES/#list-of-supported-languages","title":"List of Supported Languages","text":"<ul> <li>cz: Czech (screenscraper)</li> <li>da: Danish (screenscraper)</li> <li>de: German (screenscraper)</li> <li>en: English (screenscraper)</li> <li>es: Spanish (screenscraper)</li> <li>fi: Finnish (screenscraper)</li> <li>fr: French (screenscraper)</li> <li>hu: Hungarian (screenscraper)</li> <li>it: Italian (screenscraper)</li> <li>ja: Japanese (screenscraper)</li> <li>ko: Korean (screenscraper)</li> <li>nl: Dutch (screenscraper)</li> <li>no: Norwegian (screenscraper)</li> <li>pl: Polish (screenscraper)</li> <li>pt: Portuguese (screenscraper)</li> <li>ru: Russian (screenscraper)</li> <li>sk: Slovakian (screenscraper)</li> <li>sv: Swedish (screenscraper)</li> <li>tr: Turkish (screenscraper)</li> <li>zh: Chinese (screenscraper)</li> </ul>"},{"location":"LANGUAGES/#default-language-precedence","title":"Default Language Precedence","text":"<p>Skyscraper's default internal language priority list is as follows. Topmost language has highest priority and so forth.</p> <ul> <li>Auto-detected language or language set with <code>--lang LANGUAGE</code> or <code>lang=\"LANGUAGE\"</code></li> <li>en</li> <li>de</li> <li>fr</li> <li>es</li> </ul>"},{"location":"LANGUAGES/#configuring-language","title":"Configuring Language","text":"<p>It is possible to manipulate the default internal language priority list. You can either do this on command-line or through <code>/home/&lt;USER&gt;/.skyscraper/config.ini</code>. It is recommended to set it in <code>config.ini</code> for a permanent setup.</p>"},{"location":"LANGUAGES/#permanent-setting-in-configini","title":"Permanent setting in config.ini","text":"<p>Read this and this.</p>"},{"location":"LANGUAGES/#command-line","title":"Command Line","text":"<p>Read this.</p>"},{"location":"PLATFORMS/","title":"Platforms","text":""},{"location":"PLATFORMS/#supported-platforms-and-how-to-add-new-platforms-for-scraping","title":"Supported Platforms and how to add new Platforms for Scraping","text":"<p>Get a list of supported platforms with <code>Skyscraper --help</code>.</p> <p>After the initial work from torresflo @ GitHub it is possible to add new platforms by editing the <code>platforms.json</code> file. However, since version 3.9.0 of Skyscraper this file is replaced by <code>peas.json</code> (short for platforms, extensions/formats, aliases and scrapers) in the same folder. The information in the file is the same as before.</p> <p>Take this example from the <code>peas.json</code> file:</p> <pre><code>    [...]\n    \"megadrive\": {\n        \"aliases\": [\n            \"genesis\",\n            \"mega drive\",\n            \"sega mega drive\",\n            \"sega mega drive/genesis\"\n        ],\n        \"formats\": [\n            \"*.bin\",\n            \"*.gen\",\n            \"*.md\",\n            \"*.sg\",\n            \"*.smd\"\n        ],\n        \"scrapers\": [\n            \"openretro\",\n            \"screenscraper\"\n        ]\n    },\n    [...]\n</code></pre> <ul> <li><code>megadrive</code>: this key reflects the platform/folder name (or more generally the   handle), usually provided with <code>-p</code> on the command line.</li> <li><code>aliases</code>: these aliases can be used to allow additional hits for a search.   The use of aliases is handy especially for scraping websites which do not   provide a web API. Currently Screenscraper, Mobygames or The Games DB are   providing an web API. See also section about   <code>platforms_idmap.csv</code> and Updating the   files below.</li> <li><code>formats</code>: set of ROM file extensions which will be included in scraping if   a ROM file is not provided explicitly via command line.</li> <li><code>scrapers</code>: Denotes the possible scrapers if not overridden by <code>-s</code> command   line switch. The <code>scrapers</code> segment in the JSON will be deprecated in some   later versions as it is not used in the codebase.</li> </ul> <p>Tip</p> <p>If you need a specific folder name for a platform (on your setup or due to an EmulationStation theme) use a symbolic link (see <code>megadrive</code> (=folder) and <code>genesis</code> (=symlink) for example on RetroPie or <code>plus4</code> (=folder) and <code>c16</code> (=symlink)) instead of adding a new platform in this JSON file.</p>"},{"location":"PLATFORMS/#exact-platform-mapping","title":"Exact platform mapping","text":"<p>The file <code>platforms_idmap.csv</code> defines exact platform id for the web API of the three before mentioned scraping sites. It is a CSV file which maps the platform handle (e.g. <code>megadrive</code>) to the respective platform id of the scraping sites:</p> <pre><code>folder,screenscraper_id,mobygames_id,tgdb_id\n[...]\nmegadrive,1,16,36\n[...]\n</code></pre> <p>You can display the number with their platform name on each of the three scraping sites with the script <code>peas_and_idmap_verify.py</code>. Find the script sibling to the Skyscraper executable. This is a part of the output:</p> <pre><code>[...]\n    \u251c\u2500\u2500 megadrive\n    \u2502   \u251c\u2500\u2500 ScrS    1: Megadrive\n    \u2502   \u251c\u2500\u2500 Moby   16: Genesis\n    \u2502   \u2514\u2500\u2500 TGDB   36: Sega Mega Drive\n[...]\n</code></pre>"},{"location":"PLATFORMS/#updating-peasjson-and-platforms_idmapcsv","title":"Updating <code>peas.json</code> and <code>platforms_idmap.csv</code>","text":"<p>These two files are ment to be locally edited and extended for additional platforms. Whenever you add a new segment to the <code>peas.json</code> do also lookup the corresponding platform ids and add them to <code>platforms_idmap.csv</code> for the scraping sites with an API.</p> <p>To find the platform ids for Screenscraper, Mobygames and The Games DB, please consult the files <code>screenscraper_platforms.json</code>, <code>mobygames_platforms.json</code> and <code>tgdb_platforms.json</code> which are located sibling to your <code>config.ini</code> of the Skyscraper installation. If you can not identify an id use <code>-1</code> as value in the CSV.</p> <p>For those scraping sites without an API or without exact id match do use the platform name which is used on the website and put it into the in the <code>aliases</code> list in the <code>peas.json</code> for the respective platform/system.</p> <p>Example</p> <p>ScummVM or Steam do not have an exact match on Mobygames, however you may scrape successfully for ScummVM and Steam games if you use 'PC', 'DOS', 'Windows', 'Linux' or similar as <code>\"aliases\"</code> in the <code>\"scummvm\"</code> or <code>\"steam\"</code> section of <code>peas.json</code>. Usually you find the platform information if you lookup the game manually on the website.</p>"},{"location":"PLATFORMS/#migrating-platformsjson-and-screenscraperjson","title":"Migrating <code>platforms.json</code> and <code>screenscraper.json</code>","text":"<p>Info</p> <p>If you neither edited <code>platforms.json</code> nor <code>screenscraper.json</code> or do not have these files in the Skyscraper config folder (sibling to the <code>config.ini</code>) you can safely ignore this section.</p> <p>If you have local changes in these files you can transfer your local changes to the new files. The new <code>peas.json</code> is the <code>platforms.json</code> but in a more compact form which has less visual overhead and also allows faster parsing. The <code>platforms_idmap.csv</code> maps the former <code>screenscraper.json</code> platform ids plus the platform ids of two more web API sites.</p> <p>Use the script <code>convert_platforms_json.py</code> (sibling to the Skyscraper executable) to convert the <code>platforms.json</code> to a <code>peas_mine.json</code> which you can then diff to the <code>peas.json</code> and transfer your changes to <code>peas.json</code>.</p> <p>Use the script <code>check_screenscraper_json_to_idmap.py</code> to identify differences from your <code>screenscraper.json</code>. Then use the three <code>&lt;scraper&gt;_platforms.json</code> files to identify the matching platform ids to be entered in <code>platform_idmap.csv</code>. Use <code>-1</code> in this file, if there is no matching platform id.</p>"},{"location":"PLATFORMS/#summary-of-changes-in-the-config-files","title":"Summary of Changes in the Config Files","text":"<p>Filenames shown strikethrough are superseeded. Filenames shown italic are user editable.</p> File Introduced with Version Notes (version) <code>mobygames.json</code> 3.8.0 superseeded by <code>mobygames_platforms.json</code> (v3.9.0); not to be edited; IDs are used in <code>platforms_idmap.csv</code> <code>platforms.json</code> 3.7.7-2 (@detain) superseeded by <code>peas.json</code> (3.9.0); do edit to add new platforms; uses leaner format than <code>platforms.json</code> <code>platforms_idmap.csv</code> 3.9.0 maps the platform names (handles) from <code>peas.json</code> to exact platform IDs used in Moby, Screenscraper or TGDB; do edit to add new platforms <code>screenscraper.json</code> 3.7.7-2 (@detain) IDs formerly used in here are part of <code>platforms_idmap.csv</code> (3.9.0); superseeded by <code>screenscraper_platforms.json</code> (3.9.0) which is not to be edited <code>tgdb_developers.json</code> 2.5.3 (@muldjord) API mapping of 'Developers'; Uses leaner format as before (3.9.0); not to be edited <code>tgdb_genres.json</code> 3.9.0 API mapping of 'Genres' (3.9.0); not to be edited <code>tgdb_platforms.json</code> 3.9.0 API mapping of 'Platforms' (3.9.0); not to be edited; IDs are used in <code>platforms_idmap.csv</code> <code>tgdb_publishers.json</code> 2.5.3 (@muldjord) API mapping of 'Publishers'; Uses leaner format as before (3.9.0); not to be edited"},{"location":"REGIONS/","title":"Regions","text":""},{"location":"REGIONS/#overview","title":"Overview","text":"<p>Some game information and / or game media is region-based. Skyscraper provides several ways of configuring these for your convenience. But most importantly; it supports region auto-detection directly from the file names. Read on for more information about how regions are handled by Skyscraper.</p>"},{"location":"REGIONS/#scraping-modules-that-support-regions","title":"Scraping modules that support regions","text":"<ul> <li>screenscraper (pretty much all game information and media)</li> <li>igdb (only release date)</li> <li>mobygames (only cover artwork)</li> </ul> <p>Below follows a general list of supported regions. Please note that not all regions are supported by all modules (support is noted inside the parenthesis for each country or region).</p> <p>When configuring regions be sure to use the short-names as shown (eg. 'fr' for France).</p>"},{"location":"REGIONS/#list-of-supported-regions","title":"List of supported regions","text":"Region Key Country/Region (supported by scraping site) ame American continent (screenscraper) asi Asia (screenscraper, igdb) au Australia (screenscraper, igdb, mobygames) bg Bulgaria (screenscraper, mobygames) br Brazil (screenscraper, mobygames) ca Canada (screenscraper, mobygames) cl Chile (screenscraper, mobygames) cn China (screenscraper, igdb, mobygames) cus Custom (screenscraper) cz Czech republic (screenscraper, mobygames) de Germany (screenscraper, mobygames) dk Denmark (screenscraper, mobygames) eu Europe (screenscraper, igdb) fi Finland (screenscraper, mobygames) fr France (screenscraper, mobygames) gr Greece (screenscraper, mobygames) hu Hungary (screenscraper, mobygames) il Israel (screenscraper, mobygames) it Italy (screenscraper, mobygames) jp Japan (screenscraper, igdb, mobygames) kr Korea (screenscraper, mobygames) kw Kuwait (screenscraper) mor Middle East (screenscraper) nl Netherlands (screenscraper, mobygames) no Norway (screenscraper, mobygames) nz New Zealand (screenscraper, igdb, mobygames) oce Oceania (screenscraper) pe Peru (screenscraper) pl Poland (screenscraper, mobygames) pt Portugal (screenscraper, mobygames) ru Russia (screenscraper, mobygames) se Sweden (screenscraper, mobygames) sk Slovakia (screenscraper, mobygames) sp Spain (screenscraper, mobygames) ss ScreenScraper (screenscraper) tr Turkey (screenscraper, mobygames) tw Taiwan (screenscraper, mobygames) uk United Kingdom (screenscraper, mobygames) us USA (screenscraper, igdb, mobygames) wor World (screenscraper, igdb, mobygames)"},{"location":"REGIONS/#region-auto-detection","title":"Region auto-detection","text":"<p>Skyscraper will try to auto-detect the region from the file name. It will look for designations such as <code>(Europe)</code> or <code>(e)</code> and set the region accordingly. This currently works for the following regions and / or countries:</p> <ul> <li>asi, au, br, ca, cn</li> <li>de, dk, eu, fr, it</li> <li>jp, kr, nl, se, sp</li> <li>tw, us, wor</li> </ul> <p>So if your files are named like <code>Game Name (Europe).zip</code>, there's no need to configure regions manually. Skyscraper will recognize <code>Europe</code> and add it to the top of the internal region priority list. If info or media isn't found for the auto-detected region, it will move down the list and check the next region on the list until it finds one that has data for the requested resource.</p>"},{"location":"REGIONS/#default-region-prioritization","title":"Default Region Prioritization","text":"<p>Skyscraper's default internal region priority list is as follows. Topmost region has highest priority and so forth.</p> <ul> <li>User-specified region set with <code>--region REGION</code> (command line) or <code>region=\"REGION\"</code> (config.ini)</li> <li>If no user-specified region is set, the auto-detected region will be added here</li> <li>eu</li> <li>us</li> <li>ss</li> <li>uk</li> <li>wor</li> <li>jp</li> <li>au</li> <li>ame</li> <li>de</li> <li>cus</li> <li>cn</li> <li>kr</li> <li>asi</li> <li>br</li> <li>sp</li> <li>fr</li> <li>gr</li> <li>it</li> <li>no</li> <li>dk</li> <li>nz</li> <li>nl</li> <li>pl</li> <li>ru</li> <li>se</li> <li>tw</li> <li>ca</li> </ul>"},{"location":"REGIONS/#configuring-region-manually","title":"Configuring Region Manually","text":"<p>If you insist, of course you can configure the region manually. You can either do this on command-line or through <code>/home/&lt;USER&gt;/.skyscraper/config.ini</code>. It is recommended to set it in <code>config.ini</code> for a permanent setup.</p>"},{"location":"REGIONS/#configini","title":"config.ini","text":"<p>Read this and this.</p>"},{"location":"REGIONS/#command-line","title":"Command line","text":"<p>Read this.</p>"},{"location":"SCRAPINGMODULES/","title":"Scrapers","text":""},{"location":"SCRAPINGMODULES/#scraping-module-overview","title":"Scraping Module Overview","text":"<p>Skyscraper supports several online and local sources when scraping data for your roms. This makes Skyscraper a hugely versatile tool since it also caches any resources that are gathered from any of the modules. The cached data can then be used to generate a game list and composite artwork later.</p> <p>Choosing a scraping module is as simply as setting the <code>-s &lt;MODULE&gt;</code> option when running Skyscraper on the command line. It also requires a platform to be set with <code>-p &lt;PLATFORM&gt;</code>. If you leave out the <code>-s</code> option Skyscraper goes into game list generation mode and combines your cached data into a game list for the chosen platform and frontend. Read more about the resource cache here.</p> <p>For scraping modules that support or require user credentials you have the option of either setting it on commandline with <code>-u &lt;USER:PASSWD&gt;</code> or <code>-u &lt;KEY&gt;</code> or better yet, by adding it permanently to the Skyscraper configuration at <code>/home/&lt;USER&gt;/.skyscraper/config.ini</code> as described here</p> <p>Below follows a description of all scraping modules.</p>"},{"location":"SCRAPINGMODULES/#screenscraper","title":"ScreenScraper","text":"<ul> <li>Shortname: <code>screenscraper</code></li> <li>Type: Online</li> <li>Website: www.screenscraper.fr</li> <li>Type: Rom checksum based, Exact file name based</li> <li>User credential support: Yes, and strongly recommended, but not required</li> <li>API request limit: 20k per day for registered users</li> <li>Thread limit: 1 or more depending on user credentials</li> <li>Platform support: Check list under \"Syst\u00e9mes\" or see <code>screenscraper_platforms.json</code> sibling to your <code>config.ini</code></li> <li>Media support: <code>cover</code>, <code>screenshot</code>, <code>wheel</code>, <code>marquee</code>, <code>video</code></li> <li>Example use: <code>Skyscraper -p snes -s screenscraper</code></li> </ul> <p>ScreenScraper is probably the most versatile and complete retro gaming database out there. It searches for games using either the checksums of the files or by comparing the exact file name to entries in their database.</p> <p>It can be used for gathering data for pretty much all platforms, but it does have issues with platforms that are ISO based. Still, even for those platforms, it does locate some games.</p> <p>It has the best support for the <code>wheel</code> and <code>marquee</code> artwork types of any of the databases, and also contains videos for a lot of the games.</p> <p>I strongly recommend supporting them by contributing data to the database, or by supporting them with a bit of money. This can also give you more threads to scrape with.</p> <p>Note</p> <p>Exact file name matching does not work well for the <code>arcade</code> derived platforms in cases where a data checksum doesn't match. The reason being that <code>arcade</code> and other arcade-like platforms are made up of several subplatforms. Each of those subplatforms have a high chance of containing the same file name entry. In those cases ScreenScraper can't determine a unique game and will return an empty result.</p>"},{"location":"SCRAPINGMODULES/#thegamesdb-tgdb","title":"TheGamesDb (TGDB)","text":"<ul> <li>Shortname: <code>thegamesdb</code></li> <li>Type: Online</li> <li>Website: www.thegamesdb.net</li> <li>Type: File name search based</li> <li>User credential support: Not required</li> <li>API request limit: Limited to 3000 requests per IP per month</li> <li>Thread limit: None</li> <li>Platform support: Link to list or see <code>tgdb_platforms.json</code> sibling to your <code>config.ini</code></li> <li>Media support: <code>cover</code>, <code>screenshot</code>, <code>wheel</code>, <code>marquee</code></li> <li>Example use: <code>Skyscraper -p snes -s thegamesdb</code></li> </ul> <p>For newer games there's no way around TheGamesDb. It recently had a huge redesign and their database remains one of the best out there. I would recommend scraping your roms with <code>screenscraper</code> first, and then use <code>thegamesdb</code> to fill out the gaps in your cache.</p> <p>There's a small caveat to this module, as it has a monthly request limit (see above) per IP per month. But this should be plenty for most people.</p> <p>Their API is based on a file name search. This means that the returned results do have a chance of being faulty. Skyscraper does a lot internally to make sure accepted data is for the correct game. But it is impossible to ensure 100% correct results, so do keep that in mind when using it. Consider using the <code>--flags interactive</code> command line flag if you want complete control of the accepted entries.</p>"},{"location":"SCRAPINGMODULES/#arcadedb-by-motoschifo","title":"ArcadeDB (by motoschifo)","text":"<ul> <li>Shortname: <code>arcadedb</code></li> <li>Type: Online</li> <li>Website: adb.arcadeitalia.net, youtube</li> <li>Contact: arcadedatabase@gmail.com</li> <li>Type: Mame file name id based</li> <li>User credential support: None required</li> <li>API request limit: None</li> <li>Thread limit: 1</li> <li>Platform support: Exclusively arcade platforms using official MAME files</li> <li>Media support: <code>cover</code>, <code>screenshot</code>, <code>wheel</code>, <code>marquee</code>, <code>video</code></li> <li>Example use: <code>Skyscraper -p fba -s arcadedb</code></li> </ul> <p>Several Arcade databases using the MAME file name id's have existed throughout the years. Currently the best one, in my opinion, is the ArcadeDB made by motoschifo. It goes without saying that this module is best used for arcade platforms such as <code>fba</code>, <code>arcade</code> and any of the mame sub-platforms.</p> <p>As it relies on the MAME file name id when searching, there's no use trying to use this module for any non-MAME files. It won't give you any results.</p> <p>This module also supports videos for many games.</p>"},{"location":"SCRAPINGMODULES/#openretro","title":"OpenRetro","text":"<ul> <li>Shortname: <code>openretro</code></li> <li>Type: Online</li> <li>Website: www.openretro.org</li> <li>Type: WHDLoad uuid based, File name search based</li> <li>User credential support: None required</li> <li>API request limit: None</li> <li>Thread limit: 1</li> <li>Platform support: Primarily Amiga, but supports others as well. Check list to the right</li> <li>Media support: <code>cover</code>, <code>screenshot</code>, <code>marquee</code></li> <li>Example use: <code>Skyscraper -p amiga -s openretro</code></li> </ul> <p>If you're looking to scrape the Amiga RetroPlay LHA files, there's no better way to do this than using the <code>openretro</code> module. It is by far the best WHDLoad Amiga database on the internet when it comes to data scraping, and maybe even the best Amiga game info database overall.</p> <p>The database also supports many non-Amiga platforms, but there's no doubt that Amiga is the strong point.</p>"},{"location":"SCRAPINGMODULES/#mobygames","title":"MobyGames","text":"<ul> <li>Shortname: <code>mobygames</code></li> <li>Type: Online</li> <li>Website: www.mobygames.com</li> <li>Type: File name search based</li> <li>User credential support: None required</li> <li>API request limit: 1 request per 10 seconds</li> <li>Rom limit per run: 35</li> <li>Thread limit: 1</li> <li>Platform support: List or see <code>mobygames_platforms.json</code> sibling to your <code>config.ini</code></li> <li>Media support: <code>cover</code>, <code>screenshot</code></li> <li>Example use:<ul> <li><code>Skyscraper -p fba -s mobygames &lt;SINGLE FILE TO SCRAPE&gt;</code></li> <li><code>Skyscraper -p fba -s mobygames --startat &lt;FILE TO START AT&gt; --endat &lt;FILE TO END AT&gt;</code></li> </ul> </li> </ul> <p>MobyGames. What can I say. If you haven't heard about this database before you've been missing out. It's one of the best and oldest games databases on the internet. You'll probably come across references to MobyGames on other sites when searching for retro games. There's a reason for that - it's that good.</p> <p>There's a caveat to the module as it has quite strong restrictions for the number of requests that are allowed at any given time. This restriction is global for the entire Skyscraper user base, which means that it might quit on you if other users are currently scraping from it. For this reason it has been strongly limited inside of Skyscraper by forcing a maximum number of rom scrapings per run.</p> <p>Please use this module sparingly. And only ever use it to scrape those last few roms you can't get any data for using any of the other sources.</p>"},{"location":"SCRAPINGMODULES/#igdb","title":"IGDB","text":"<ul> <li>Shortname: <code>igdb</code></li> <li>Type: Online</li> <li>Website: www.igdb.com</li> <li>Type: File name search based</li> <li>User credential support: Yes, free private API client-id and secret-key required! Read more below</li> <li>API request limit: A maximum of 4 requests per seconds is allowed</li> <li>Thread limit: 4 (each being limited to 1 request per second)</li> <li>Platform support: List</li> <li>Media support: None</li> <li>Example use:<ul> <li><code>Skyscraper -p fba -s igdb &lt;SINGLE FILE TO SCRAPE&gt;</code></li> <li><code>Skyscraper -p fba -s igdb --startat &lt;FILE TO START AT&gt; --endat &lt;FILE TO END AT&gt;</code></li> </ul> </li> </ul> <p>IGDB is a relatively new database on the market. But absolutely not a bad one at that. It has a couple caveats though, as the database doesn't distinguish between platform versions of the same game when it comes to any artwork resources (they are working to implement this at some point). This makes it less usable in a retro game scraping context as many of the games differ drastically visually between the old platforms. For that reason alone, this module will only provide textual data for your roms for the time being.</p> <p>It is required to register with the Twitch dev program (IGDB is owned by Twitch) and create a free client-id and secret-key pair for use with Skyscraper. The process of getting this free client-id and secret-key pair is quite easy. Just follow the following steps:</p> <ul> <li>Go here and sign up for an account</li> <li>Enable two-factor authentication (required)</li> <li>Register an application (call it whatever you like)</li> <li>Manage the application</li> <li>Add <code>http://localhost</code> as OAuth redirect URL</li> <li>Generate a secret-key by clicking <code>New secret</code></li> <li>Add your client-id and secret-key pair to the Skyscraper config ini (<code>/home/&lt;USER&gt;/.skyscraper/config.ini</code>):</li> </ul> <pre><code>[igdb]\nuserCreds=\"CLIENTID:SECRETKEY\"\n</code></pre> <p>Substitute CLIENTID and SECRETKEY with your own details. And that's it, you should now be able to use the IGDB module.</p>"},{"location":"SCRAPINGMODULES/#world-of-spectrum","title":"World of Spectrum","text":"<ul> <li>Shortname: <code>worldofspectrum</code></li> <li>Type: Online</li> <li>Website: www.worldofspectrum.org</li> <li>Type: File name search based</li> <li>User credential support: None required</li> <li>API request limit: None</li> <li>Thread limit: None</li> <li>Platform support: Exclusively ZX Spectrum games</li> <li>Media support: <code>cover</code>, <code>screenshot</code></li> <li>Example use: <code>Skyscraper -p zxspectrum -s worldofspectrum</code></li> </ul> <p>If you're looking specifically for ZX Spectrum data, this is the module to use. World of Spectrum is probably the most complete ZX Spectrum resource and information database in existence. I strongly recommend visiting the site if you have any interest in these little machines. It's a cornucopia of information on the platform.</p>"},{"location":"SCRAPINGMODULES/#emulationstation-game-list","title":"EmulationStation Game List","text":"<ul> <li>Shortname: <code>esgamelist</code></li> <li>Type: Local</li> <li>Website: https://emulationstation.org</li> <li>Type: Exact file name match</li> <li>User credential support: None required</li> <li>API request limit: None</li> <li>Thread limit: None</li> <li>Platform support: All</li> <li>Media support: <code>screenshot</code>, <code>marquee</code>, <code>video</code></li> <li>Example use: <code>Skyscraper -p snes -s esgamelist</code></li> </ul> <p>This module allows you to import data from an existing EmulationStation game list into the Skyscraper cache. This is useful if you already have a lot of data and artwork in a gamelist.xml file and you wish to use it with Skyscraper.</p> <p>Skyscraper will search for the <code>gamelist.xml</code> file at <code>&lt;INPUT FOLDER&gt;/gamelist.xml</code> which by default is <code>/home/&lt;USER&gt;/RetroPie/roms/&lt;PLATFORM&gt;/gamelist.xml</code>. If that file isn't found it will look for it at <code>/home/&lt;USER&gt;/.skyscraper/import/&lt;PLATFORM&gt;/gamelist.xml</code>.</p>"},{"location":"SCRAPINGMODULES/#custom-resource-import-scraper","title":"Custom Resource Import Scraper","text":"<ul> <li>Shortname: <code>import</code></li> <li>Type: Local</li> <li>Website: Documentation@github</li> <li>Type: Exact file name match</li> <li>User credential support: None required</li> <li>API request limit: None</li> <li>Thread limit: None</li> <li>Platform support: All</li> <li>Media support: <code>cover</code>, <code>screenshot</code>, <code>wheel</code>, <code>marquee</code>, <code>video</code></li> <li>Example use: <code>Skyscraper -p snes -s import</code></li> </ul> <p>Read a thorough description of this module here.</p>"},{"location":"USECASE/","title":"Sample Use Case","text":""},{"location":"USECASE/#a-typical-skyscraper-usecase","title":"A Typical Skyscraper Usecase","text":"<p>The following describes a typical way of using Skyscraper. It's really simple to use once you understand the core concept. It has a couple of layers you should familiarize yourself with in order to get the best results.</p> <p>Info</p> <p>Always remember to close your frontend before using Skyscraper! Otherwise any game list generated by Skyscraper will be overwritten when you exit the frontend.</p> <p>Info</p> <p>Some of the scraping modules either require or work best when you have registered a user with their service and configured Skyscraper to make use of these credentials when scraping with the module. The suggested <code>screenscraper</code> source used in the command a bit further down will work without credentials. But when the service is busy, it will give you an error! So consider registering users with the relevant sources and configure Skyscraper to make use of them. Read about all scraping modules here.</p> <p>Now, let's dig in!</p>"},{"location":"USECASE/#you-have-some-files-but-no-information","title":"You Have Some Files but no Information","text":"<p>You probably installed Skyscraper in order to get some data and artwork on your frontend game lists. So let's say that you have a bunch of Super Nintendo files you wish to populate with data. You'd first gather some data into the Skyscraper resource cache and then generate a game list using the cached data afterwards. So it's a two-step process.</p> <p></p>"},{"location":"USECASE/#the-gathering-phase","title":"The Gathering Phase","text":"<p>Skyscraper can gather data from several scraping modules / sources (set with <code>-s &lt;MODULE&gt;</code>). So you'd start by scraping the <code>snes</code> platform (set with <code>-p &lt;PLATFORM&gt;</code>) with one or more of those modules. Each time you do so, all of the data will be saved in the Skyscraper cache.</p> <pre><code>$ Skyscraper -p snes -s screenscraper\n</code></pre> <p>This should have given you a lot of data for your games. But some of it might still be missing. So let's continue gathering some data from another module.</p> <pre><code>$ Skyscraper -p snes -s thegamesdb\n</code></pre> <p>Each time you scrape your roms with a new scraping module, all of the data that was gathered will be cached inside Skyscraper's internal resource cache. The cache can contain one of each resource for each of the scraping modules.</p>"},{"location":"USECASE/#the-game-list-generation-phase","title":"The Game List Generation Phase","text":"<p>By having gathered data from both sources (<code>screenscraper</code> and <code>thegamesdb</code>) there's a good chance that you will get a complete result if the data from both is combined. And that's exactly what Skyscraper can do for you.</p> <pre><code>$ Skyscraper -p snes\n</code></pre> <p>Running that command will generate a game list for the chosen frontend (default is EmulationStation). It combines all of the cached data into the most complete results. This phase also includes the artwork compositing. If you use a non-default frontend, you can configure this in Skyscraper's configuration as described here. Or you can set it on command-line as described here.</p> <p>The source priority for each resource is defined per-platform and can be changed at any time. Read more about that here.</p>"},{"location":"USECASE/#so-what-then","title":"So What Then?","text":"<p>You're done! The game list has been generated and you can relaunch your frontend to enjoy the game data and artwork. Or you can move on and scrape data for another platform. Just remember to distinguish between the gathering phase and the game list generation phase. Always gather first, then generate the game list afterwards.</p> <p>Tip</p> <p>You can always re-generate a game list if you changed the artwork configuration or gathered new data for any of your roms. Simply rerun the <code>Skyscraper -p &lt;PLATFORM&gt;</code> command again, and the game list will be re-generated with your new settings using all of the previously cached data.</p> <p>Tip</p> <p>If you re-gather data for a platform, it will skip games that already have data in the resource cache to save bandwidth for the online sources. To force a refresh of the data directly from the source, you need to set the <code>--refresh</code> option.</p>"},{"location":"USECASE/#but-what-about","title":"But What About...","text":"<p>Yes, yes, yes. This is just the basics. You can customize the artwork completely to your liking. You can prioritize the different cached resources any way you like. You can scrape single games in order to gather information for just that one game. You can enable video scraping. You can import your own data into the cache. You can edit the cached data. You can clean your cache. You can create aliases for games that are difficult to scrape (see <code>aliasMap.csv</code> sibling to your <code>config.ini</code>). You can change your preferred region and language for the modules that support it. You can set up keys or user id's and password for the scraping modules that take advantage of this. There's a lot you can do if you want to.</p> <p>The important thing to note is that the defaults for Skyscraper is set to work well for most users. So unless you see something you want to change, you don't have to. But it's equally important to know that you can.</p> <p>If this piqued your interest, please read the entire documentation thorougly. Everything is documented to the last detail. It can seem overwhelming. But it gives you some really powerful options to scrape just the way you want. Read more about the advanced features here.</p>"}]}